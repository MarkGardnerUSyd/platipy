Search.setIndex({"docnames": ["_examples/dvh_analysis", "_examples/visualise", "cardiac", "cli", "contributing", "dicom", "dose", "examples", "gen/modules", "gen/platipy", "gen/platipy.backend", "gen/platipy.backend.sample", "gen/platipy.cli", "gen/platipy.dicom", "gen/platipy.dicom.communication", "gen/platipy.dicom.dicom_directory_crawler", "gen/platipy.dicom.download", "gen/platipy.dicom.io", "gen/platipy.dicom.nifti_to_rtstruct", "gen/platipy.dicom.nifti_to_series", "gen/platipy.dicom.rtstruct_to_nifti", "gen/platipy.dicom.tests", "gen/platipy.imaging", "gen/platipy.imaging.atlas", "gen/platipy.imaging.augment", "gen/platipy.imaging.deformation_fields", "gen/platipy.imaging.generation", "gen/platipy.imaging.label", "gen/platipy.imaging.projects", "gen/platipy.imaging.projects.bronchus", "gen/platipy.imaging.projects.cardiac", "gen/platipy.imaging.registration", "gen/platipy.imaging.tests", "gen/platipy.imaging.utils", "gen/platipy.imaging.visualisation", "getting_started", "index", "registration", "service", "utils", "visualiser"], "filenames": ["_examples/dvh_analysis.ipynb", "_examples/visualise.ipynb", "cardiac.rst", "cli.rst", "contributing.rst", "dicom.rst", "dose.rst", "examples.rst", "gen/modules.rst", "gen/platipy.rst", "gen/platipy.backend.rst", "gen/platipy.backend.sample.rst", "gen/platipy.cli.rst", "gen/platipy.dicom.rst", "gen/platipy.dicom.communication.rst", "gen/platipy.dicom.dicom_directory_crawler.rst", "gen/platipy.dicom.download.rst", "gen/platipy.dicom.io.rst", "gen/platipy.dicom.nifti_to_rtstruct.rst", "gen/platipy.dicom.nifti_to_series.rst", "gen/platipy.dicom.rtstruct_to_nifti.rst", "gen/platipy.dicom.tests.rst", "gen/platipy.imaging.rst", "gen/platipy.imaging.atlas.rst", "gen/platipy.imaging.augment.rst", "gen/platipy.imaging.deformation_fields.rst", "gen/platipy.imaging.generation.rst", "gen/platipy.imaging.label.rst", "gen/platipy.imaging.projects.rst", "gen/platipy.imaging.projects.bronchus.rst", "gen/platipy.imaging.projects.cardiac.rst", "gen/platipy.imaging.registration.rst", "gen/platipy.imaging.tests.rst", "gen/platipy.imaging.utils.rst", "gen/platipy.imaging.visualisation.rst", "getting_started.rst", "index.rst", "registration.rst", "service.rst", "utils.rst", "visualiser.rst"], "titles": ["DVH Analysis", "Visualise Images", "Cardiac Segmentation", "Command Line Tools", "Contributing", "DICOM Conversion", "Dose", "Examples", "platipy", "platipy package", "platipy.backend package", "platipy.backend.sample package", "platipy.cli package", "platipy.dicom package", "platipy.dicom.communication package", "platipy.dicom.dicom_directory_crawler package", "platipy.dicom.download package", "platipy.dicom.io package", "platipy.dicom.nifti_to_rtstruct package", "platipy.dicom.nifti_to_series package", "platipy.dicom.rtstruct_to_nifti package", "platipy.dicom.tests package", "platipy.imaging package", "platipy.imaging.atlas package", "platipy.imaging.augment package", "platipy.imaging.deformation_fields package", "platipy.imaging.generation package", "platipy.imaging.label package", "platipy.imaging.projects package", "platipy.imaging.projects.bronchus package", "platipy.imaging.projects.cardiac package", "platipy.imaging.registration package", "platipy.imaging.tests package", "platipy.imaging.utils package", "platipy.imaging.visualisation package", "Getting Started", "PlatiPy documentation", "Registration", "Algorithm Deployment Service", "Utilities", "Image Visualiser"], "terms": {"thi": [0, 1, 2, 3, 4, 5, 10, 17, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "notebook": [0, 1, 36], "demonstr": [0, 1], "how": [0, 1, 4, 34, 35, 39, 40], "dose": [0, 3, 5, 36], "volum": [0, 1, 27, 29, 31, 37, 39], "histogram": [0, 27, 31, 37], "1": [0, 1, 2, 6, 10, 14, 16, 26, 27, 30, 31, 33, 34, 36, 37, 38, 39, 40], "try": [0, 1, 2, 10, 35], "platipi": [0, 1, 3, 4, 5, 6, 37, 39, 40], "except": [0, 1, 10, 33], "pip": [0, 1, 2, 35, 36, 38], "instal": [0, 1, 4, 10, 36, 38], "git": 0, "http": [0, 5, 17, 27, 38], "github": [0, 2, 3, 4, 5, 17], "com": [0, 3, 5, 17, 38], "pyplati": [0, 3, 38], "matplotlib": [0, 1, 2, 5, 17, 34, 39, 40], "pyplot": [0, 1, 2], "plt": [0, 1, 2, 34, 36, 40], "simpleitk": [0, 1, 2, 5, 6, 17, 26, 27, 29, 31, 33, 36, 37, 38, 39], "sitk": [0, 1, 2, 5, 17, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 40], "inlin": 0, "from": [0, 1, 3, 5, 6, 10, 16, 17, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39], "imag": [0, 3, 5, 6, 8, 9, 16, 17, 39], "get_hn_nifti": [0, 22, 32], "imagevisualis": [0, 1, 2, 22, 34, 36, 40], "label": [0, 1, 2, 6, 9, 22, 26, 31, 33, 34, 36, 37, 40], "util": [0, 1, 2, 5, 9, 17, 22], "get_com": [0, 1, 2, 22, 27, 39], "calculate_dvh_for_label": [0, 6], "calculate_d_x": [0, 6], "calculate_v_x": [0, 6], "some": [0, 1, 2, 3, 4, 16, 17, 26, 27, 31, 32, 33, 35, 37, 38], "tcia": [0, 9, 13], "tcga": 0, "hnsc": 0, "dataset": [0, 3, 5, 9, 10, 14, 16, 17, 38], "The": [0, 1, 2, 3, 4, 5, 6, 10, 14, 16, 17, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "i": [0, 1, 3, 4, 6, 10, 17, 26, 27, 29, 31, 32, 33, 34, 35, 37, 38, 39, 40], "one": [0, 1, 2, 14, 29, 31, 37], "patient": [0, 2, 3, 16, 17, 26, 33], "contain": [0, 2, 3, 5, 6, 10, 14, 17, 27, 29, 30, 32, 33, 34, 39, 40], "ct": [0, 1, 2, 26, 29, 30, 31, 33, 37, 38], "structur": [0, 1, 2, 3, 5, 6, 16, 17, 26, 27, 30, 31, 32, 33, 36, 37, 39], "2": [0, 1, 2, 10, 14, 26, 27, 30, 31, 33, 34, 36, 37, 39, 40], "data_path": [0, 2], "let": [0, 3, 10, 38], "": [0, 2, 3, 6, 10, 27, 29, 31, 34, 37, 38, 39, 40], "read": [0, 5, 17, 38, 39], "we": [0, 1, 4, 5, 17, 26, 29, 31, 36, 37, 38], "ve": 0, "3": [0, 1, 2, 3, 14, 26, 27, 29, 30, 31, 33, 36, 37, 39], "test_pat_path": [0, 2], "joinpath": [0, 1, 2], "tcga_cv_5977": 0, "ct_imag": [0, 1, 26], "readimag": [0, 1, 2, 38], "str": [0, 2, 5, 6, 10, 16, 17, 31, 32, 33, 34, 37, 39, 40], "tcga_cv_5977_1_ct_onc_neck_neck_4": 0, "nii": [0, 1, 2, 3, 17, 30, 38], "gz": [0, 1, 2, 3, 17, 30, 38], "tcga_cv_5977_1_plan": 0, "resampl": [0, 31, 37, 39], "structure_nam": [0, 3, 17, 27], "brainstem": 0, "mandibl": 0, "ctv_60_gy": 0, "ptv60": 0, "cord": 0, "l_parotid": 0, "r_parotid": 0, "f": [0, 2], "tcga_cv_5977_1_rtstruct_": 0, "now": [0, 5, 10, 17], "got": 0, "4": [0, 1, 14, 26, 30, 31, 34, 37], "vi": [0, 2, 36], "cut": [0, 1, 2, 34, 40], "add_scalar_overlai": [0, 1, 22, 34, 40], "discrete_level": [0, 1, 34, 40], "20": [0, 2, 29, 30, 31, 37], "colormap": [0, 1, 5, 17, 34, 36, 39, 40], "cm": [0, 1, 5, 17, 34, 36, 39, 40], "get_cmap": [0, 1, 5, 17, 34, 39, 40], "inferno": [0, 34, 40], "add_contour": [0, 1, 2, 22, 34, 36, 40], "fig": [0, 1, 2, 27, 36], "show": [0, 1, 2, 10, 22, 34, 36, 40], "home": [0, 1, 30], "runner": [0, 1, 30], "work": [0, 1, 2, 10, 26, 29, 35, 38], "py": [0, 1, 4, 38], "1139": [0, 1], "userwarn": [0, 1], "No": [0, 1], "contour": [0, 3, 5, 17, 26, 27, 34, 38, 39, 40], "level": [0, 1, 3, 31, 37], "were": [0, 1], "found": [0, 1, 10], "within": [0, 1, 2, 4, 31, 37, 38], "rang": [0, 1], "origin": [0, 1, 26, 29, 31, 34, 37, 39, 40], "34": [0, 1], "normal": [0, 1, 17, 27, 34, 40], "upper": [0, 1, 26, 33], "revers": [0, 1], "lower": [0, 1, 2, 26, 31, 33, 37], "self": [0, 1, 2, 10], "__origin": [0, 1], "here": [0, 1, 2, 4, 5, 17, 35, 36, 38], "us": [0, 2, 3, 4, 5, 6, 10, 17, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40], "get": [0, 4, 6, 9, 10, 16, 21, 27, 29, 32, 33, 39], "back": [0, 29], "panda": [0, 6], "datafram": [0, 6], "object": [0, 5, 10, 14, 16, 17, 27, 34, 38, 39, 40], "5": [0, 1, 2, 14, 26, 27, 29, 30, 33, 34, 40], "6": [0, 1, 27, 30, 34, 40], "plt_dvh": 0, "melt": 0, "id_var": 0, "cc": [0, 6], "mean": [0, 1, 6, 27, 33, 34, 36, 39], "var_nam": 0, "bin": [0, 6, 27, 31, 37], "value_nam": 0, "ax": [0, 1, 26, 34, 40], "subplot": 0, "kei": [0, 2, 3, 4, 5, 6, 9, 10, 16, 17, 33, 34, 39, 40], "grp": 0, "groupbi": 0, "kind": 0, "line": [0, 10, 12, 31, 34, 36, 37, 38, 40], "x": [0, 1, 3, 6, 26, 27, 30, 31, 33, 34, 37, 39, 40], "y": [0, 3, 26, 33, 34, 39, 40], "legend": 0, "loc": 0, "best": [0, 4], "xlabel": 0, "gy": [0, 6], "ylabel": 0, "frequenc": 0, "titl": 0, "final": [0, 2, 29, 31, 37, 39], "extract": [0, 17, 34], "commonli": 0, "d95": 0, "v40": 0, "7": [0, 1, 2, 27, 36, 39], "df_metrics_d": 0, "95": 0, "0": [0, 1, 3, 6, 10, 14, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 40], "035205": 0, "36": [0, 29], "565625": 0, "60": 0, "255060": 0, "58": 0, "903234": 0, "558704": 0, "9": [0, 1, 2, 39], "182000": 0, "333571": 0, "8": [0, 1, 2, 4, 30, 31, 33, 34, 37, 40], "df_metrics_v": 0, "40": [0, 1, 29, 30], "000000": 0, "59": 0, "137344": 0, "190": 0, "980434": 0, "280": 0, "184746": 0, "946522": 0, "392365": 0, "an": [1, 3, 4, 6, 10, 14, 26, 27, 29, 31, 32, 33, 34, 36, 37, 39], "along": [1, 6, 27, 33], "bound": [1, 31, 34, 37, 40], "box": [1, 33, 34, 36, 39, 40], "follow": [1, 2, 4, 26, 33, 35, 36, 38], "cell": [1, 2], "need": [1, 2, 3, 5, 21, 29, 31, 32, 35, 36, 37, 38], "exampl": [1, 3, 4, 10, 31, 36, 37, 38], "class": [1, 10, 14, 26, 34, 40], "doe": [1, 35, 36], "most": [1, 3], "heavi": 1, "lift": 1, "regard": 1, "It": [1, 10, 17, 38], "ha": [1, 31, 37], "number": [1, 6, 16, 26, 27, 31, 33, 37, 39], "help": [1, 4, 31, 34, 35, 37], "function": [1, 5, 10, 17, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39], "make": [1, 3, 4, 31, 37, 38], "ad": [1, 27, 39], "addit": [1, 2], "inform": [1, 3, 4, 10, 14, 17, 27, 31, 33, 36, 37, 38], "rel": [1, 26, 31, 34, 37, 40], "pain": 1, "free": [1, 4], "check": [1, 29, 32, 35, 36], "cla": 1, "grab": 1, "get_lung_nifti": [1, 2, 22, 32, 38], "usual": [1, 2, 17, 27, 39], "suspect": 1, "numpi": [1, 6, 17, 29], "np": [1, 5, 6, 17, 26, 27, 34, 39], "pathlib": [1, 5, 17, 21, 30, 32], "path": [1, 2, 3, 5, 9, 10, 16, 17, 21, 27, 29, 30, 32, 38, 39], "gener": [1, 2, 3, 9, 10, 17, 22, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39], "interest": [1, 33, 36, 39], "registr": [1, 9, 22, 36], "convert_mask_to_reg_structur": [1, 22, 31, 37], "apply_transform": [1, 22, 31, 37], "deform": [1, 9, 22, 26], "fast_symmetric_forces_demons_registr": [1, 22, 31, 36, 37], "dvf": [1, 9, 22, 36], "generate_field_asymmetric_extend": [1, 22, 26], "crop": [1, 9, 22, 36], "label_to_roi": [1, 22, 33, 39], "lung": [1, 2, 9, 22, 29, 32], "lctsc": [1, 2, 16, 30], "fetch": [1, 16, 30, 32, 34, 38], "input_directori": 1, "rai": [1, 26], "comput": [1, 2, 6, 26, 27, 33, 36, 38, 39], "tomographi": 1, "scan": [1, 2, 33], "3d": [1, 29, 33, 36, 39], "dictionari": [1, 5, 6, 16, 17, 27, 29, 30, 33, 34, 39, 40], "binari": [1, 6, 17, 26, 27, 29, 31, 33, 36, 37, 39], "mask": [1, 3, 5, 6, 9, 17, 22, 27, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40], "pat_directori": 1, "s1": [1, 2], "101": 1, "ct_filenam": 1, "next": [1, 2], "glob": [1, 38], "as_posix": 1, "rtstruct": [1, 3, 17, 38], "contour_filename_list": 1, "list": [1, 2, 5, 6, 10, 14, 16, 17, 26, 27, 31, 33, 34, 35, 37, 38, 39, 40], "contour_filenam": 1, "_name": 1, "name": [1, 2, 3, 5, 6, 9, 10, 17, 33, 34, 36, 38, 39, 40], "split": 1, "rtstruct_": 1, "defin": [1, 3, 6, 10, 17, 26, 31, 33, 34, 37, 39, 40], "locat": [1, 2, 3, 14, 27], "orthogon": 1, "slice": [1, 17, 26, 27, 29, 33, 34, 39], "transaxi": [1, 27, 39], "first": [1, 2, 10, 26, 27, 29, 34], "axi": [1, 17, 26, 27, 34, 36, 39, 40], "coron": [1, 26, 31, 33, 37, 39], "second": [1, 26, 27, 29, 31, 34, 37], "saggit": 1, "third": [1, 34], "image_visualis": 1, "50": [1, 30, 31, 33, 37], "256": 1, "chang": [1, 3, 4, 10, 31, 37], "intens": [1, 33, 36], "window": [1, 2, 34, 40], "better": [1, 3], "tissu": 1, "minimum": [1, 14, 33], "also": [1, 3, 10, 26, 31, 37, 38, 39], "possibl": [1, 36], "differ": [1, 3, 17, 35], "can": [1, 3, 4, 6, 10, 26, 27, 29, 31, 33, 34, 35, 37, 38, 39], "view": [1, 8, 9, 34, 36], "don": [1, 4, 38], "t": [1, 2, 3, 4, 10, 34, 36, 38, 40], "set": [1, 3, 5, 6, 10, 11, 16, 17, 27, 29, 30, 31, 34, 37, 38, 39, 40], "which": [1, 2, 3, 4, 6, 16, 17, 26, 27, 29, 30, 31, 33, 34, 35, 37, 38, 39, 40], "case": [1, 2, 10, 27, 29, 31, 37], "middl": 1, "900": [1, 29], "1100": 1, "terrain": 1, "figure_size_in": [1, 34, 40], "set_limits_from_label": [1, 22, 34, 40], "lung_l": 1, "lung_r": 1, "anoth": [1, 27, 39], "wai": [1, 4, 36, 38], "true": [1, 2, 10, 16, 17, 26, 27, 29, 30, 31, 34, 37, 38, 39, 40], "add_bounding_box": [1, 22, 34, 40], "heart": [1, 2, 30], "return_as_list": [1, 33, 39], "There": [1, 3, 31, 36, 37], "ar": [1, 2, 3, 4, 5, 16, 17, 27, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40], "tool": [1, 2, 36, 38], "normalis": [1, 27, 31, 37], "distanc": [1, 26, 27, 29, 31, 36, 37, 39], "map": [1, 2, 27, 31, 37, 39], "ndm_heart": 1, "expans": [1, 26, 31, 33, 34, 36, 37, 39, 40], "edg": [1, 6], "10": [1, 2, 10, 26, 27, 29, 30, 31, 33, 34, 37, 39, 40], "show_legend": [1, 34, 40], "30": [1, 30, 31, 37], "simul": [1, 26, 36], "expand": [1, 26], "5mm": 1, "nice": [1, 3], "heart_expand": 1, "tfm_expans": 1, "dvf_expans": 1, "add_vector_overlai": [1, 22, 34, 36, 40], "magnitud": [1, 27, 34, 36, 40], "mm": [1, 27, 31, 33, 34, 36, 37, 39, 40], "gnuplot2": 1, "alpha": [1, 34, 40], "75": [1, 30, 34, 40], "arrow_scal": [1, 34, 36, 40], "arrow_width": [1, 34, 36, 40], "subsampl": [1, 34, 36, 40], "color_funct": [1, 34, 36, 40], "show_colorbar": [1, 34, 40], "color": [1, 5, 17, 34, 39, 40], "880088": 1, "linewidth": [1, 34, 40], "88ff88": 1, "comparison": [1, 9, 22, 34, 40], "between": [1, 27, 29, 31, 37, 39], "perform": [1, 10, 27, 29], "visual": 1, "In": [1, 4, 29, 38], "transform": [1, 26, 27, 31, 36, 37, 39], "abov": [1, 2, 38], "ct_image_deform": 1, "input_imag": [1, 29, 31, 37], "reference_imag": [1, 26, 31, 33, 37], "none": [1, 5, 6, 10, 14, 16, 17, 27, 29, 30, 31, 34, 37, 40], "default_valu": [1, 30, 31, 34, 37, 39], "1000": [1, 29, 30, 31, 34, 37], "interpol": [1, 17, 31, 33, 34, 37, 39], "sitkbsplin": [1, 31, 37], "200": [1, 30], "add_comparison_overlai": [1, 22, 34, 36, 40], "For": [1, 4, 10, 31, 37], "experienc": [1, 2], "user": 1, "customis": 1, "figur": [1, 27, 34], "after": [1, 34], "been": [1, 2], "creat": [1, 2, 3, 4, 10, 29, 36, 38], "add": [1, 4, 10, 34, 40], "more": [1, 3, 4, 10, 31, 34, 35, 36, 37], "etc": [1, 27, 29, 33, 39], "11": [1, 30], "stuff": 1, "text": 1, "99": 1, "va": 1, "top": [1, 29], "right": [1, 2, 26, 33], "fontsiz": 1, "14": 1, "96": 1, "12": [1, 30, 36], "style": 1, "ital": 1, "c": [1, 3, 14], "red": 1, "test_axi": 1, "add_ax": 1, "85": 1, "55": 1, "hist": 1, "random": 1, "histtyp": 1, "stepfil": 1, "fc": 1, "1144ee": 1, "ec": 1, "set_xlabel": 1, "result": [1, 2, 31, 36, 37], "option": [1, 3, 5, 6, 10, 16, 17, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40], "save": [1, 2, 5, 27, 38, 39], "savefig": [1, 2, 27], "output": [1, 3, 5, 17, 26, 27, 29, 30, 31, 32, 33, 37, 38, 39], "jpeg": 1, "dpi": 1, "500": [1, 34], "39": [1, 29], "project": [2, 9, 17, 22, 34, 36, 40], "consist": 2, "algorithm": [2, 3, 9, 10, 27, 29, 30, 31, 32, 33, 36, 37, 39], "automat": [2, 4, 10, 26, 36], "plu": 2, "17": 2, "sub": 2, "typic": [2, 3, 17, 26], "radiotherapi": [2, 3, 27, 39], "hybrid": [2, 30], "whole": 2, "deep": [2, 27, 39], "learn": [2, 27, 39], "model": [2, 8, 9, 30, 31, 36, 37], "nnunet": [2, 35, 36], "multi": [2, 31, 37], "atla": [2, 27, 30, 33, 36, 39], "base": [2, 4, 10, 14, 17, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 39, 40], "geometr": [2, 33], "smaller": 2, "auto": [2, 3, 38], "By": 2, "default": [2, 3, 5, 6, 9, 10, 16, 17, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40], "format": [2, 3, 5, 17, 27, 32, 33, 34, 38, 40], "conform": [2, 4, 33], "tg": 2, "263": 2, "guidelin": 2, "left": [2, 26, 33], "ventricl": [2, 33], "ventricle_l": [2, 30], "ventricle_r": [2, 30], "atrium": [2, 33], "atrium_l": [2, 30], "atrium_r": [2, 30], "aorta": [2, 33], "arteri": [2, 33], "a_aorta": [2, 30], "pulmonari": [2, 33], "a_pulmonari": [2, 30], "anterior": 2, "descend": 2, "a_lad": [2, 30], "circonflex": 2, "a_cflx": [2, 30], "coronari": 2, "a_coronary_l": [2, 30], "a_coronary_r": [2, 30], "superior": [2, 26, 29], "vena": 2, "cava": 2, "v_venacava_": [2, 30], "mitral": [2, 33], "valv": [2, 9, 22], "valve_mitr": 2, "tricuspid": [2, 33], "valve_tricuspid": 2, "aortic": [2, 33], "valve_aort": 2, "pulmon": [2, 33], "valve_pulmon": 2, "sinoatri": 2, "conduct": 2, "node": 2, "cn_sinoatri": 2, "atrioventricular": 2, "cn_atrioventricular": 2, "These": [2, 31, 37], "step": [2, 31, 32, 37], "have": [2, 3, 4, 10, 33, 35, 38], "test": [2, 9, 13, 22, 27, 30, 38, 39], "ubuntu": [2, 38], "04": 2, "oper": [2, 27, 38, 39], "other": [2, 3, 4, 26, 36], "linux": 2, "version": [2, 10, 27], "expect": [2, 26, 32], "untest": 2, "like": [2, 3, 4, 10, 31, 37, 38], "won": [2, 10], "time": [2, 29], "contribut": [2, 27, 34, 36, 39], "welcom": [2, 4, 36], "On": 2, "specif": [2, 10, 27, 35, 36, 39], "take": [2, 17], "approxim": 2, "minut": [2, 29], "process": [2, 27, 31, 37], "24": [2, 30], "core": [2, 31, 37], "intel": 2, "i9": 2, "processor": 2, "64gb": 2, "ram": 2, "nvidia": 2, "3090": 2, "gpu": 2, "howev": 2, "recommend": [2, 10, 33, 38], "note": [2, 31, 33, 37, 38], "well": [2, 3, 10, 27], "download": [2, 9, 13, 32, 38], "increas": 2, "runtim": 2, "extra": [2, 4, 35, 36], "librari": [2, 4, 35], "code": [2, 4, 10, 29, 34, 35, 36, 38], "snippet": 2, "pull": [2, 4], "data": [2, 5, 6, 9, 16, 17, 21, 22, 27, 38], "folder": [2, 3, 4], "call": [2, 10, 38], "directori": [2, 3, 4, 5, 10, 16, 17, 29, 32, 36, 38], "import": [2, 4, 26, 31, 36, 37, 38], "run_hybrid_segment": [2, 28, 30], "pick": [2, 10], "out": [2, 36], "201": [2, 30], "test_imag": 2, "lctsc_test_s1_201_0_ct_0": 2, "auto_structur": 2, "_": [2, 3, 17, 30], "output_directori": [2, 3, 14, 16, 17, 32], "substructur": 2, "mkdir": 2, "exist_ok": 2, "struct_nam": 2, "writeimag": [2, 38, 39], "print": [2, 3, 27, 31, 37, 38, 39], "visualis": [2, 9, 22], "snapshot": 2, "struct": [2, 3], "png": 2, "assum": [2, 27, 34, 38, 39, 40], "you": [2, 3, 4, 10, 35, 36, 38], "thorax": 2, "store": [2, 5, 17, 32], "nifti": [2, 3, 16, 17, 21, 32, 36, 38], "o": [2, 3, 10, 38], "output_fold": 2, "A": [2, 3, 5, 16, 17, 26, 27, 31, 33, 34, 36, 37, 39], "solut": [2, 38], "pytorch": 2, "via": [2, 31, 35, 37], "isn": 2, "alwai": 2, "necessarili": 2, "correct": 2, "your": [2, 4, 35, 38], "instruct": [2, 4], "upgrad": [2, 35], "again": [2, 38], "new": [2, 4, 10, 31, 37], "Then": 2, "reinstal": 2, "If": [2, 3, 4, 5, 6, 10, 16, 17, 26, 31, 32, 34, 35, 37, 38, 39, 40], "continu": [2, 33], "experi": 2, "issu": 2, "restart": 2, "pleas": 2, "consid": [2, 38], "report": 2, "tracker": 2, "ani": [2, 3, 4, 10, 17, 27, 31, 37, 38], "request": [2, 4, 14, 31, 37], "would": [2, 3, 26, 31, 37], "appreci": 2, "finnegan": [2, 36], "r": [2, 3, 34, 38, 40], "chin": 2, "v": [2, 3], "chlap": [2, 36], "p": [2, 3], "et": [2, 27, 39], "al": [2, 27, 39], "open": 2, "sourc": 2, "fulli": [2, 4], "autom": [2, 4], "develop": [2, 4, 10, 27, 31, 37, 39], "optimis": [2, 30, 31, 36, 37], "physic": [2, 27, 31, 33, 37, 39], "medicin": 2, "biologi": 2, "2022": 2, "under": [2, 14, 27, 31, 37, 39], "review": [2, 4], "isense": 2, "jaeger": 2, "pf": 2, "kohl": 2, "saa": 2, "petersen": 2, "j": [2, 27, 39], "maier": 2, "hein": 2, "kh": 2, "nnu": 2, "net": 2, "configur": [2, 3, 38], "method": [2, 9, 10, 17, 31, 37], "biomed": 2, "nat": 2, "2021": [2, 27, 39], "18": 2, "203": [2, 30], "211": 2, "doi": [2, 27, 39], "1038": 2, "s41592": 2, "020": 2, "01008": 2, "z": [2, 3, 26, 27, 30, 33, 34, 36, 39, 40], "dowl": [2, 29], "koh": 2, "e": [2, 3, 17, 31, 33, 34, 36, 37, 39, 40], "feasibl": 2, "thorac": 2, "plan": 2, "probabilist": 2, "framework": [2, 4, 10, 30], "phy": 2, "med": [2, 27, 39], "biol": 2, "2019": 2, "64": [2, 27, 31, 37], "085006": 2, "1088": 2, "1361": 2, "6560": 2, "ab0ea6": 2, "dicom": [3, 8, 9, 10, 32, 36, 38], "crawler": 3, "easier": [3, 29], "bulk": [3, 36], "convert": [3, 5, 16, 17, 21, 31, 33, 34, 36, 37, 38], "file": [3, 5, 10, 14, 17, 29, 32, 36, 38, 39], "quit": 3, "lot": [3, 36], "do": [3, 10, 33, 38], "provid": [3, 30, 31, 35, 36, 37, 38], "input": [3, 26, 27, 29, 31, 33, 34, 37, 38, 40], "recurs": 3, "search": [3, 31, 37], "through": 3, "might": [3, 29, 38], "image_format": 3, "structure_format": 3, "long": 3, "suit": [3, 36], "singl": [3, 14, 26, 31, 33, 36, 37, 39], "simpl": [3, 17, 31, 36, 37], "parent_sorting_data": [3, 17], "compact": 3, "study_uid_index": [3, 17], "separ": [3, 5, 10, 17], "seri": [3, 5, 10, 17, 36, 38], "valu": [3, 5, 6, 14, 16, 17, 26, 27, 29, 31, 33, 34, 37, 39, 40], "sort_bi": 3, "patientnam": [3, 17], "patientid": 3, "although": [3, 36], "header": 3, "tag": [3, 17], "allow": [3, 17, 38], "hope": 3, "find": [3, 4, 36], "feedback": [3, 36], "u": [3, 17], "know": 3, "input_dir": 3, "requir": [3, 4, 10, 17, 31, 33, 36, 37, 38], "should": [3, 4, 10, 26, 27, 31, 33, 35, 37, 39], "same": [3, 10, 31, 37], "parent": [3, 9, 10, 38], "field": [3, 17, 26, 31, 34, 37, 40], "output_dir": [3, 5, 17], "b": [3, 31, 36, 37], "sort": [3, 16, 17], "highest": 3, "three": [3, 39], "special": 3, "counter": 3, "distinct": 3, "studi": [3, 27, 36, 39], "image_desc": [3, 17], "info": [3, 14, 17, 36, 38], "addition": 3, "g": [3, 17, 31, 36, 37], "modal": [3, 14, 16, 17, 26, 31, 37], "seriesnumb": [3, 17], "acquisitiondata": 3, "doesn": 3, "exist": [3, 4, 32, 34, 40], "return": [3, 5, 6, 10, 14, 16, 17, 21, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39], "dose_format": 3, "distribut": 3, "dosesummationtyp": [3, 17], "overwrit": [3, 17], "thei": [3, 36], "fals": [3, 5, 10, 17, 26, 27, 30, 31, 33, 34, 37, 39, 40], "file_suffix": 3, "suffix": 3, "type": [3, 5, 6, 9, 10, 14, 16, 17, 21, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40], "short_descript": 3, "less": 3, "verbos": [3, 17, 27, 30, 31, 37, 39], "descript": [3, 17, 31, 34, 37], "while": [3, 4], "run": [3, 4, 8, 9, 10, 22, 28, 31, 32, 35, 36, 37], "choos": 3, "pass": [3, 5, 6, 10, 27, 33, 34, 40], "nitfti": 3, "OR": 3, "flag": [3, 5, 10, 31, 37], "cardiac": [3, 22, 28, 32, 35, 36], "bronchu": [3, 22, 28, 32], "input_path": 3, "config": [3, 10, 38], "json": 3, "d": [3, 17, 34, 38, 40], "select": [3, 36], "argument": [3, 16, 33], "dcm_file": [3, 14], "refer": [3, 5, 17, 26, 27, 31, 33, 37, 38, 39], "copi": [3, 17, 33], "m": [3, 27, 29], "pair": 3, "filenam": [3, 5, 17, 33], "out_rt_filenam": 3, "rt": [3, 5, 17, 36], "dcm": [3, 14, 38], "overrid": [3, 5, 10, 17, 38], "dcm_img": [3, 5, 17], "link": 3, "dcm_rt_file": [3, 5, 17], "prefix": [3, 5, 17], "case_01_": 3, "od": 3, "place": [3, 4, 16, 17, 30, 36], "oi": 3, "output_img": [3, 5, 17], "space": [3, 5, 17, 27, 31, 33, 37, 39], "indic": [3, 27, 39], "leav": 3, "all": [4, 6, 16, 30, 33, 34, 40], "script": [4, 10, 34, 38], "bug": 4, "fix": [4, 5, 17, 31, 37], "document": 4, "below": [4, 33, 34, 36, 38, 40], "start": [4, 29, 33, 39], "branch": 4, "off": 4, "master": [4, 29, 38], "implement": [4, 10, 30], "onc": [4, 35], "complet": 4, "head": [4, 10, 16, 26, 27, 32, 39], "merg": 4, "main": 4, "At": 4, "point": [4, 5, 6, 10, 17, 26, 27, 31, 37, 39], "maintain": 4, "submiss": 4, "befor": [4, 38], "manag": [4, 8, 9, 38], "depend": 4, "avail": [4, 10, 16, 31, 33, 35, 36, 37], "easili": 4, "dev": 4, "virtual": 4, "environ": [4, 10, 35, 38], "To": 4, "what": 4, "python": [4, 10, 34, 38], "pep": 4, "mai": [4, 26, 29], "black": 4, "ensur": 4, "modul": [4, 8], "experiment": 4, "collabor": 4, "until": 4, "determin": [4, 31, 34, 37, 40], "live": 4, "variou": [4, 33, 35, 36, 39], "author": [4, 29], "unintend": 4, "break": 4, "part": [4, 26, 36], "pytest": 4, "see": [4, 10, 33, 38], "offici": 4, "introduct": 4, "when": [4, 31, 34, 37, 39, 40], "submit": 4, "fail": [4, 29], "look": [4, 29, 32, 36], "could": [4, 10, 29], "led": 4, "integr": 4, "own": 4, "re": [4, 27, 34, 39], "unsur": 4, "proce": 4, "discuss": 4, "interfac": [4, 12], "cli": [4, 8, 9], "click": 4, "With": 4, "feel": 4, "io": [5, 9, 13, 38], "nifti_to_rtstruct": [5, 8, 9, 13, 38], "convert_nifti": [5, 13, 17, 38], "dcm_path": [5, 17], "mask_input": [5, 17], "output_fil": [5, 17, 38, 39], "color_map": [5, 17], "linearsegmentedcolormap": [5, 17, 34, 39, 40], "utilis": [5, 17], "packag": [5, 8, 35, 36], "qurit": [5, 17], "keep": [5, 17], "compat": [5, 17], "paramet": [5, 6, 10, 14, 16, 17, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40], "dict": [5, 6, 14, 16, 17, 27, 29, 30, 32, 33, 34, 39, 40], "Or": [5, 17], "string": [5, 16, 17], "comma": [5, 17], "write": [5, 17, 38, 39], "rainbow": [5, 17, 39], "rtstruct_to_nifti": [5, 8, 9, 13], "convert_rtstruct": [5, 13, 17], "struct_": [5, 17], "give": [5, 17, 34, 38, 40], "fix_missing_data": [5, 13, 17], "contour_data": [5, 17], "miss": [5, 17], "pydicom": [5, 14, 17, 38], "sequenc": [5, 17, 27, 39], "arrai": [5, 17, 26, 27, 29, 34, 39], "read_dicom_imag": [5, 13, 17], "dicom_path": [5, 17], "read_dicom_struct_fil": [5, 13, 17], "transform_point_set_from_dicom_struct": [5, 13, 17], "dicom_imag": [5, 17], "dicom_struct": [5, 17], "spacing_overrid": [5, 17], "tupl": [5, 17, 26, 33, 34, 39, 40], "rtdose_to_nifti": 5, "convert_rtdos": 5, "dcm_dose": 5, "forc": [5, 31, 37], "dose_output_path": 5, "bool": [5, 10, 16, 17, 26, 27, 31, 37, 39], "written": [5, 36], "grid": [5, 6, 27, 31, 34, 37], "calculate_d_cc_x": 6, "receiv": 6, "produc": 6, "float": [6, 27, 29, 31, 33, 34, 37, 39, 40], "metric": [6, 27, 30, 31, 36, 37, 39], "frame": 6, "row": 6, "each": [6, 17, 26, 27, 31, 33, 37, 39], "calcul": [6, 31, 37], "percent": 6, "threshold": [6, 26, 27, 29, 33, 39], "calculate_dvh": 6, "dose_grid": 6, "1001": 6, "int": [6, 14, 16, 26, 27, 31, 33, 34, 37, 39, 40], "ndarrai": [6, 26, 27], "specifi": [6, 16, 26, 31, 33, 37, 38, 39], "bin_width": 6, "max_dos": 6, "multipl": [6, 36], "width": [6, 31, 33, 34, 37, 40], "maximum": [6, 26, 27, 36, 39], "size": [6, 26, 31, 33, 37, 39], "cubic": [6, 27, 31, 37, 39], "centimetr": [6, 27, 39], "subpackag": 8, "backend": [8, 9, 35, 36, 38], "submodul": [8, 9, 13, 22, 28], "api": [8, 9], "applic": [8, 9, 14, 27, 36, 39], "client": [8, 9, 38], "task": [8, 9, 30], "content": 8, "dicom_crawl": [8, 9], "nifti_to_seri": [8, 9, 13], "segment": [8, 9, 26, 27, 29, 30, 32, 33, 36, 38, 39], "tcia_download": [8, 9], "sampl": [9, 10, 27, 31, 37, 38], "algorithmendpoint": [9, 10], "endpoint": [9, 10], "mediatyp": [9, 10], "customconfig": [9, 10], "restful_json": [9, 10], "dataobjectdownloadendpoint": [9, 10], "parser": [9, 10], "dataobjectendpoint": [9, 10], "delet": [9, 10], "post": [9, 10, 26, 27], "dataobjectsendpoint": [9, 10], "datasetendpoint": [9, 10], "datasetreadyendpoint": [9, 10], "datasetsendpoint": [9, 10], "dicomlocationendpoint": [9, 10], "resourc": [9, 10, 38], "method_decor": [9, 10], "taskstatu": [9, 10], "triggerendpoint": [9, 10], "authent": [9, 10], "settings_to_json": [9, 10], "flaskapp": [9, 10], "beat_start": [9, 10], "celery_start": [9, 10], "dicom_listener_aetitl": [9, 10, 38], "dicom_listener_port": [9, 10, 38], "regist": [9, 10, 31, 37, 38], "run_dicom_listen": [9, 10], "add_api_kei": [9, 10], "create_db": [9, 10], "run_celeri": [9, 10], "apikei": [9, 10], "is_admin": [9, 10], "alchemyencod": [9, 10], "dataobject": [9, 10, 38], "children": [9, 10], "dataset_id": [9, 10], "id": [9, 10, 16], "is_fetch": [9, 10], "is_input": [9, 10], "is_sent": [9, 10], "meta_data": [9, 10], "parent_id": [9, 10], "series_instance_uid": [9, 10, 14], "statu": [9, 10, 14, 38], "timestamp": [9, 10], "from_dicom_loc": [9, 10], "from_dicom_location_id": [9, 10], "input_data_object": [9, 10], "output_data_object": [9, 10], "owner_kei": [9, 10], "timeout": [9, 10], "to_dicom_loc": [9, 10], "to_dicom_location_id": [9, 10], "dicomloc": [9, 10], "ae_titl": [9, 10, 14], "host": [9, 10, 14, 38], "port": [9, 10, 14, 38], "default_timeout": [9, 10], "add_endpoint": [9, 10], "dashboard": [9, 10], "fetch_log": [9, 10], "fetch_statu": [9, 10], "view_endpoint": [9, 10], "configure_log": [9, 10], "on_celery_setup_log": [9, 10], "platipy_cli": [9, 12], "commun": [9, 13, 36, 38], "connector": [9, 13], "crawl": [9, 13], "test_convert": [9, 13], "test_crawl": [9, 13], "augment": [9, 22], "fusion": [9, 22], "iar": [9, 22], "linear": [9, 17, 22, 36, 37], "test_bronchu": [9, 22], "test_cardiac": [9, 22], "test_visualis": [9, 22], "vessel": [9, 22, 36], "anim": [9, 22], "primitive_body_segment": [10, 11], "classvar": 10, "collect": [10, 16], "rout": 10, "add_url_rul": 10, "cl": 10, "indent": 10, "dataobject_id": 10, "given": [10, 26, 27, 31, 33, 34, 37, 39, 40], "flask_rest": 10, "reqpars": 10, "requestpars": 10, "task_id": 10, "func": 10, "default_set": [10, 30, 38], "import_nam": 10, "static_url_path": 10, "static_fold": 10, "union": 10, "pathlik": 10, "static": 10, "static_host": 10, "host_match": 10, "subdomain_match": 10, "template_fold": 10, "templat": [10, 38], "instance_path": 10, "instance_relative_config": 10, "root_path": 10, "flask": 10, "custom": 10, "app": [10, 38], "platipy_servic": 10, "7777": [10, 38], "debug": [10, 34, 38], "load_dotenv": 10, "local": [10, 38], "server": [10, 38], "product": [10, 38], "intend": 10, "meet": 10, "secur": 10, "instead": 10, "deploi": 10, "index": [10, 33, 34, 39], "wsgi": 10, "reload": 10, "debugg": 10, "happen": 10, "want": [10, 31, 37, 38], "mode": 10, "disabl": [10, 38], "execut": [10, 31, 37], "interact": [10, 34, 40], "use_evalex": 10, "traceback": 10, "screen": 10, "activ": [10, 31, 37], "badli": 10, "support": 10, "command": [10, 12, 38], "suppress": 10, "error": 10, "page": 10, "unless": [10, 31, 37], "As": 10, "enabl": [10, 39], "just": [10, 36], "without": [10, 38], "invok": 10, "use_reload": 10, "use_debugg": 10, "being": [10, 38], "catch": 10, "becaus": 10, "hostnam": 10, "listen": [10, 13, 14], "extern": [10, 26, 33], "127": [10, 14, 38], "server_nam": 10, "variabl": 10, "present": [10, 14], "webserv": 10, "5000": 10, "load": 10, "nearest": [10, 29, 31, 37], "env": 10, "flaskenv": 10, "Will": [10, 16, 31, 37, 38], "forward": 10, "underli": 10, "werkzeug": 10, "serv": 10, "run_simpl": 10, "dotenv": 10, "flask_debug": 10, "thread": 10, "listen_port": 10, "listen_ae_titl": 10, "background": [10, 31, 33, 37], "incom": 10, "databas": [10, 16], "kwarg": 10, "skipkei": 10, "ensure_ascii": 10, "check_circular": 10, "allow_nan": 10, "sort_kei": 10, "jsonencod": 10, "obj": 10, "subclass": 10, "serializ": 10, "rais": [10, 27, 34, 39, 40], "typeerror": 10, "arbitrari": 10, "iter": [10, 27, 29, 31, 33, 36, 37, 39], "def": [10, 38], "els": 10, "entri": 10, "data_object": [11, 30, 38], "working_dir": [11, 30, 38], "dicomconnector": [13, 14], "do_find": [13, 14], "download_seri": [13, 14], "get_series_for_studi": [13, 14], "get_studies_for_pati": [13, 14], "move_seri": [13, 14], "on_association_accept": [13, 14], "on_association_releas": [13, 14], "on_c_echo": [13, 14], "on_c_stor": [13, 14], "send_dcm": [13, 14], "verifi": [13, 14], "fetch_data": [13, 16], "get_collect": [13, 16], "get_hn_data": [13, 16], "get_lung_data": [13, 16], "get_modalities_in_collect": [13, 16], "get_patients_in_collect": [13, 16], "flatten": [13, 17, 27], "get_dicom_info_from_descript": [13, 17], "get_suv_bw_scale_factor": [13, 17], "process_dicom_directori": [13, 17], "process_dicom_file_list": [13, 17], "process_dicom_seri": [13, 17], "safe_sort_dicom_image_list": [13, 17], "write_output_data_to_disk": [13, 17], "convert_nifti_to_dicom_seri": [13, 17], "dicom_data": [13, 21], "nifti_data": [13, 21, 22, 32], "test_convert_dicom_to_nifti": [13, 21], "test_convert_nifti_to_dicom": [13, 21], "tmp": 14, "tmp73pb2jfy": 14, "query_model": 14, "840": 14, "10008": 14, "recieved_callback": 14, "study_instance_uid": 14, "patient_id": [14, 16], "pynetdicom": 14, "seriesinstanceuid": [14, 38], "move_aet": 14, "event": 14, "respond": 14, "echo": 14, "servic": [14, 22, 28, 32], "context": [14, 36], "namedtupl": 14, "verif": 14, "wa": [14, 16, 36, 38], "sent": 14, "about": [14, 26, 29, 35, 36], "associ": 14, "peer": 14, "ae": 14, "respons": 14, "must": [14, 31, 34, 37, 38, 39, 40], "valid": [14, 27, 39], "either": 14, "0000": 14, "0900": 14, "element": [14, 26], "accept": [14, 27, 39], "send": [14, 38], "over": 14, "defini": 16, "modalit": 16, "whether": [16, 27, 31, 37, 39], "where": [16, 26, 29, 33, 34, 36, 38, 40], "number_of_pati": 16, "neck": [16, 27, 32, 39], "radiom": 16, "hn1": 16, "keyword": 16, "contour_data_list": 17, "itr": 17, "dicom_object": 17, "return_extra": 17, "sop_class_nam": 17, "unknown": 17, "attempt": 17, "filedataset": 17, "dicom_directori": 17, "parent_sorting_field": 17, "output_image_name_format": 17, "output_structure_name_format": 17, "output_dose_name_format": 17, "output_file_suffix": 17, "overwrite_existing_fil": 17, "write_to_disk": 17, "initial_sop_class_name_default": 17, "dicom_file_list": 17, "organis": [17, 36], "uid": [17, 38], "dicom_series_dict": 17, "series_uid": 17, "individual_fil": 17, "dicom_image_list": 17, "much": [17, 39], "safer": 17, "than": [17, 31, 37], "sliceloc": 17, "mandatori": 17, "posit": [17, 26, 33], "orient": [17, 34], "onto": 17, "account": [17, 39], "hf": 17, "ff": 17, "vertic": [17, 26], "resolut": [17, 27, 31, 37], "axial_spac": 17, "coronal_spac": 17, "sagitt": [17, 26, 31, 33, 37, 39], "final_struct_name_sequ": 17, "structure_list": [17, 27, 39], "output_data_dict": 17, "disk": 17, "reference_dcm": 17, "tag_overrid": 17, "contractaug": [22, 26], "deformableaug": [22, 26], "expandaug": [22, 26], "shiftaug": [22, 26], "apply_augment": [22, 26], "generate_random_augment": [22, 26], "generate_field_asymmetric_contract": [22, 26], "generate_field_expand": [22, 26], "generate_field_radial_bend": [22, 26], "generate_field_shift": [22, 26], "insert_cylind": [22, 26], "insert_cylinder_imag": [22, 26], "insert_spher": [22, 26], "insert_sphere_imag": [22, 26], "extend_mask": [22, 26], "get_bone_mask": [22, 26], "get_external_mask": [22, 26, 33], "compute_apl": [22, 27, 39], "compute_metric_dsc": [22, 27, 39], "compute_metric_hd": [22, 27, 39], "compute_metric_masd": [22, 27, 39], "compute_metric_mean_apl": [22, 27, 39], "compute_metric_sensit": [22, 27, 39], "compute_metric_specif": [22, 27, 39], "compute_metric_total_apl": [22, 27, 39], "compute_surface_dsc": [22, 27, 39], "compute_surface_metr": [22, 27, 39], "compute_volum": [22, 27, 39], "compute_volume_metr": [22, 27, 39], "combine_label": [22, 27], "combine_labels_stapl": [22, 27], "compute_weight_map": [22, 27], "mutual_inform": [22, 27, 31, 37], "process_probability_imag": [22, 27], "gaussian_curv": [22, 27], "median_absolute_devi": [22, 27], "run_iar": [22, 27], "evaluate_distance_on_surfac": [22, 27], "evaluate_distance_to_refer": [22, 27], "regrid_spherical_data": [22, 27], "binary_decode_imag": [22, 27, 39], "binary_encode_structure_list": [22, 27, 39], "correct_volume_overlap": [22, 27, 39], "generate_prim": [22, 27, 39], "prime_decode_imag": [22, 27, 39], "prime_encode_structure_list": [22, 27, 39], "vectorised_transform_index_to_physical_point": [22, 27, 39], "vectorised_transform_physical_point_to_index": [22, 27, 39], "bspline_registr": [22, 31, 37], "multiscale_demon": [22, 31, 37], "alignment_registr": [22, 31, 37], "linear_registr": [22, 31, 36, 37], "apply_deformable_transform": [22, 31, 37], "apply_linear_transform": [22, 31, 37], "control_point_spacing_distance_to_numb": [22, 31, 37], "convert_mask_to_distance_map": [22, 31, 37], "deformable_registration_command_iter": [22, 31, 37], "registration_command_iter": [22, 31, 37], "smooth_and_resampl": [22, 31, 37], "stage_iter": [22, 31, 37], "get_lung_dicom": [22, 32], "assert_bronchus_mask": [22, 32], "assert_lung_mask": [22, 32], "bronchus_data": [22, 32], "test_bronchus_segment": [22, 32], "test_lung_segment": [22, 32], "cardiac_data": [22, 32], "test_cardiac_servic": [22, 32], "test_cardiac_structure_guided_servic": [22, 32], "test_comparison_overlay_visualis": [22, 32], "test_contour_visualis": [22, 32], "test_scalar_overlay_visualis": [22, 32], "crop_to_label_ext": [22, 33, 39], "crop_to_roi": [22, 33, 39], "detect_hol": [22, 33], "fill_hol": [22, 33], "get_lung_mask": [22, 33], "generate_valve_from_great_vessel": [22, 33], "generate_valve_using_cylind": [22, 33], "com_from_image_list": [22, 33], "convert_simpleitk_to_vtk": [22, 33], "simpleitk_image_from_vtk_tub": [22, 33], "tube_from_com_list": [22, 33], "vessel_spline_gener": [22, 33], "write_vtk_tube_to_fil": [22, 33], "visualiseboundingbox": [22, 34], "visualisecomparisonoverlai": [22, 34], "visualisecontour": [22, 34], "visualiseimag": [22, 34], "visualisescalaroverlai": [22, 34], "visualisevectoroverlai": [22, 34], "generate_comparison_colormix": [22, 34], "project_onto_arbitrary_plan": [22, 34], "reorientate_vector_field": [22, 34], "return_slic": [22, 34], "subsample_vector_field": [22, 34], "vector_image_grid": [22, 34], "clear": [22, 34, 40], "draw_bounding_box_on_ax": [22, 34], "labelmap": [22, 34], "logger": [22, 34, 38], "vector_contract": 26, "gaussian_smooth": 26, "bone_mask": 26, "abc": 26, "abstract": 26, "vector_expand": 26, "vector_shift": 26, "mask_imag": 26, "vector_asymmetric_contract": 26, "compute_real_dvf": 26, "contract": 26, "vector": [26, 31, 34, 37, 39, 40], "appli": [26, 31, 34, 37, 40], "entir": 26, "convent": 26, "sup": [26, 29], "inf": 26, "ant": 26, "border": 26, "millimetr": [26, 31, 33, 37], "scale": [26, 27, 31, 34, 37, 40], "gaussian": [26, 27, 31, 37], "kernel": [26, 31, 37], "smooth": [26, 31, 37], "real": [26, 27, 33, 39], "involv": 26, "slower": 26, "displacementfieldtransform": [26, 31, 37], "repres": [26, 34], "displac": [26, 31, 37], "vector_asymmetric_extend": 26, "extend": 26, "extens": [26, 38], "use_internal_deform": 26, "dilat": [26, 31, 37], "region": [26, 33, 36, 39], "restrict": 26, "body_mask": 26, "reference_point": 26, "axis_of_rot": 26, "mask_bend_from_reference_point": 26, "synthet": [26, 36], "characteris": 26, "radial": 26, "bend": [26, 36], "move": [26, 31, 37], "so": [26, 27, 29, 39], "rotat": [26, 27, 31, 36, 37, 39], "length": [26, 27, 34, 39, 40], "equal": 26, "multipli": 26, "dimens": [26, 27, 31, 37, 39], "axial": [26, 31, 33, 37, 39], "limit": [26, 31, 34, 37, 40], "shift": [26, 31, 36, 37], "arr": 26, "cyl_radiu": 26, "cyl_height": 26, "cyl_centr": 26, "insert": [26, 33, 38], "cylind": 26, "extent": [26, 29, 33, 39], "height": [26, 33], "radiu": [26, 33], "centr": [26, 27, 31, 33, 37, 39], "ellipsoid": 26, "sp_radiu": 26, "sp_centr": 26, "sphere": 26, "direct": [26, 33, 39], "extension_mm": 26, "interior_mm_shap": 26, "prototyp": 26, "current": [26, 38], "onli": [26, 34, 38, 40], "inferior": 26, "shape": [26, 33], "interior": 26, "millimet": 26, "lower_threshold": [26, 33], "350": 26, "upper_threshold": [26, 33], "3500": 26, "max_hole_s": 26, "bone": 26, "voxel": [26, 29, 31, 37], "hole": [26, 33], "fill": [26, 33], "100": [26, 30], "2500": 26, "wise": [26, 27, 39], "convex": 26, "hull": 26, "modifi": 26, "filter": [26, 29, 31, 37], "label_ref": [27, 39], "label_test": [27, 39], "distance_threshold_mm": [27, 39], "helper": [27, 31, 34, 37, 39], "ground": [27, 39], "truth": [27, 39], "total": [27, 33, 39], "label_a": [27, 39], "label_b": [27, 39], "auto_crop": [27, 39], "dice": [27, 39], "similar": [27, 31, 36, 37, 39], "coeffici": [27, 39], "two": [27, 29, 31, 34, 37, 39], "compar": [27, 36, 39], "hausdorff": [27, 36, 39], "absolut": [27, 39], "surfac": [27, 31, 37, 39], "sensit": [27, 39], "tau": [27, 39], "nikolov": [27, 39], "clinic": [27, 36, 39], "anatomi": [27, 39], "internet": [27, 39], "23": [27, 39], "e26151": [27, 39], "2196": [27, 39], "26151": [27, 39], "deviat": [27, 39], "dsc": [27, 36, 39], "hausdorffdist": [27, 39], "meansurfacedist": [27, 39], "mediansurfacedist": [27, 39], "maximumsurfacedist": [27, 39], "sigmasurfacedist": [27, 39], "surfacedsc": [27, 39], "volumeoverlap": [27, 39], "fractionoverlap": [27, 39], "truepositivefract": [27, 39], "truenegativefract": [27, 39], "falsepositivefract": [27, 39], "falsenegativefract": [27, 39], "atlas_set": [27, 30, 33], "dir": [27, 33, 36], "0001": 27, "smooth_sigma": [27, 30, 31, 37], "combin": 27, "weight": 27, "label_list_dict": 27, "stapl": 27, "target_imag": 27, "moving_imag": [27, 31, 37], "vote_typ": [27, 30], "unweight": [27, 30], "vote_param": [27, 30], "blocksiz": 27, "correlation_funct": 27, "lambda": [27, 31, 37], "epsilon": 27, "1e": 27, "05": [27, 30], "factor": [27, 31, 34, 37], "1000000000000": 27, "gain": 27, "patch_window_mm": 27, "25": [27, 31, 34, 37], "resampled_voxel_size_mm": 27, "sigma": [27, 31, 37], "arr_a": 27, "arr_b": 27, "mutual": [27, 31, 37], "1d": 27, "directli": 27, "histogram2d": 27, "okai": 27, "probability_imag": 27, "probabl": 27, "basic": [27, 36], "curv": 27, "standard": [27, 36], "median": [27, 29], "robust": 27, "variabililti": 27, "en": 27, "wikipedia": 27, "org": 27, "wiki": 27, "reference_structur": [27, 30], "smooth_distance_map": [27, 30], "z_score_statist": [27, 30], "mad": [27, 30], "outlier_method": [27, 30], "iqr": [27, 30], "min_best_atlas": [27, 30], "outlier_factor": [27, 30], "single_step": 27, "project_on_spher": [27, 30], "remov": 27, "reference_volum": 27, "test_volum": 27, "abs_dist": 27, "reference_as_distance_map": 27, "evalu": [27, 31, 37], "altern": 27, "theta": 27, "phi": 27, "resample_factor": 27, "spheric": 27, "plot": 27, "plotfig": 27, "identifi": 27, "fignam": 27, "p_lat": 27, "p_long": 27, "grid_valu": 27, "binary_encoded_img": [27, 39], "decod": [27, 39], "encod": [27, 39], "valueerror": [27, 34, 39, 40], "32": [27, 39], "binary_label_dict": [27, 39], "assign_overlap_to_largest": [27, 39], "prime": [27, 39], "smallest": [27, 39], "largest": [27, 39], "infinit": [27, 39], "as_int": [27, 39], "real_coord": [27, 39], "mass": [27, 31, 33, 37, 39], "compon": [27, 34, 35, 36, 39], "coordin": [27, 39], "prime_encoded_imag": [27, 39], "point_arrai": [27, 39], "fast_mask": [28, 29], "generate_airway_mask": [28, 29], "generate_lung_mask": [28, 29], "get_dist": [28, 29], "run_bronchus_segment": [28, 29], "display_open_cardiac_zip_url_loc": [28, 30], "install_atlas_from_zipfil": [28, 30], "install_hybrid_cardiac_from_zip": [28, 30], "install_open_atla": [28, 30], "run_cardiac_segment": [28, 30], "cardiac_servic": [28, 30], "cardiac_structure_guided_servic": [28, 30], "wed": 29, "feb": 29, "21": 29, "16": [29, 30], "27": 29, "2018": 29, "around": [29, 34, 40], "4cm": 29, "carina": 29, "airwai": 29, "becom": 29, "visibl": 29, "2cm": 29, "detect": [29, 33], "wider": 29, "area": [29, 33, 38], "improv": [29, 31, 37], "eg": 29, "genlung_mask": 29, "old": 29, "itk": [29, 31, 37], "student": 29, "think": 29, "replac": [29, 38], "airhol": 29, "connect": 29, "liverpool": 29, "13": [29, 30], "appear": 29, "jason": 29, "csiro": 29, "img": [29, 30, 33, 38, 39], "end": [29, 32, 38], "fast": [29, 31, 37], "lack": 29, "setpixel": 29, "horribli": 29, "slow": 29, "reduc": 29, "cast": 29, "pixel": [29, 31, 33, 37], "dest": 29, "lung_mask": [29, 32, 33], "config_dict": 29, "destin": 29, "initi": [29, 31, 32, 37], "includ": [29, 35, 36], "a_mask": 29, "b_mask": 29, "intermedi": 29, "algorithmset": 29, "distance_from_supu_slice_valu": 29, "expected_physical_size_rang": 29, "22000": 29, "150000": 29, "extend_from_carina_mm": 29, "fast_mod": 29, "lung_mask_hu_valu": 29, "750": 29, "775": 29, "800": 29, "825": 29, "850": 29, "700": 29, "950": 29, "650": 29, "minimum_tree_half_physical_s": 29, "outputbronchusnam": 29, "auto_bronchu": 29, "outputlungnam": 29, "auto_lung": 29, "proxim": 29, "bronchial": 29, "tree": 29, "bronchus_settings_default": 29, "zip_file_path": 30, "atlas_path": 30, "path_to_nnunet_zip": 30, "path_to_atlas_zip": 30, "zenodo": 30, "guide_structur": 30, "atlas_id_list": 30, "03": 30, "08": 30, "35": [30, 34, 40], "atlas_image_format": 30, "case_": 30, "_crop": 30, "atlas_label_format": 30, "test_atla": 30, "atlas_structure_list": 30, "aorticvalv": 30, "ascendingaorta": 30, "lantdescarteri": 30, "lcircumflexarteri": 30, "lcoronaryarteri": 30, "leftatrium": 30, "leftventricl": 30, "mitralvalv": 30, "pulmonaryarteri": 30, "pulmonicvalv": 30, "rcoronaryarteri": 30, "rightatrium": 30, "rightventricl": 30, "svc": 30, "tricuspidvalv": 30, "wholeheart": 30, "crop_atlas_expansion_mm": 30, "crop_atlas_to_structur": 30, "guide_structure_nam": 30, "superior_extens": 30, "auto_crop_target_image_set": 30, "expansion_mm": [30, 33, 39], "deformable_registration_set": 30, "isotropic_resampl": [30, 31, 37], "iteration_stag": [30, 31, 37], "150": 30, "ncore": [30, 31, 37], "resolution_stag": [30, 31, 37], "smoothing_sigma": [30, 31, 37], "geometric_segmentation_set": 30, "atlas_structure_nam": 30, "atlas_ascending_aorta": 30, "atlas_left_atrium": 30, "atlas_left_ventricl": 30, "atlas_pulmonary_arteri": 30, "atlas_right_atrium": 30, "atlas_right_ventricl": 30, "atlas_superior_vena_cava": 30, "atlas_whole_heart": 30, "conduction_system_definit": 30, "atrioventricular_node_radius_mm": 30, "sinoatrial_node_radius_mm": 30, "geometric_name_suffix": 30, "_geometr": 30, "run_geometric_algorithm": 30, "valve_definit": 30, "aortic_valve_thickness_mm": 30, "mitral_valve_radius_mm": 30, "15": [30, 33], "mitral_valve_thickness_mm": 30, "pulmonic_valve_thickness_mm": 30, "tricuspid_valve_radius_mm": 30, "tricuspid_valve_thickness_mm": 30, "iar_set": 30, "label_fusion_set": 30, "optimal_threshold": 30, "44": 30, "45": 30, "46": 30, "38": 30, "42": 30, "linear_registration_set": 30, "mean_squar": [30, 31, 37], "number_of_iter": [30, 31, 37], "gradient_descent_line_search": [30, 31, 37], "reg_method": [30, 31, 37], "affin": [30, 31, 36, 37], "sampling_r": [30, 31, 37], "shrink_factor": [30, 31, 37], "postprocessing_set": 30, "binaryfillhole_mm": 30, "run_postprocess": 30, "structures_for_binaryfillhol": 30, "structures_for_overlap_correct": 30, "return_as_crop": 30, "return_atlas_guide_structur": 30, "return_proba_as_contour": 30, "structure_guided_registration_set": 30, "vessel_spline_set": 30, "scan_direction_dict": [30, 33], "stop_condition_type_dict": [30, 33], "count": [30, 33], "stop_condition_value_dict": [30, 33], "vessel_name_list": [30, 33], "vessel_radius_mm_dict": [30, 33], "cardiac_set": 30, "s2": 30, "s3": 30, "lung1": 30, "002": 30, "009": 30, "021": 30, "067": 30, "226": 30, "fetch_open_atla": 30, "nnunet_set": 30, "all_in_gpu": 30, "cascade_trainer_class_nam": 30, "nnunettrainerv2cascadefullr": 30, "chk": 30, "model_final_checkpoint": 30, "disable_mixed_precis": 30, "disable_tta": 30, "fold": 30, "lowres_segment": 30, "3d_lowr": 30, "num_threads_nifti_sav": 30, "num_threads_preprocess": 30, "task400_open_heart_1fold": 30, "trainer_class_nam": 30, "nnunettrainerv2": 30, "hybrid_settings_default": 30, "guid": [30, 31, 32, 37, 38], "fixed_imag": [31, 37], "fixed_structur": [31, 37], "moving_structur": [31, 37], "lbfg": [31, 37], "initial_grid_spac": [31, 37], "grid_scale_factor": [31, 37], "interp_ord": [31, 37], "initial_isotropic_s": [31, 37], "number_of_histogram_bins_mi": [31, 37], "spline": [31, 33, 36, 37], "target": [31, 37], "primari": [31, 37], "secondari": [31, 37], "downsampl": [31, 37], "fraction": [31, 37], "dure": [31, 37], "lbfsg": [31, 37], "memori": [31, 37], "broyden": [31, 37], "fletcher": [31, 37], "goldfarb": [31, 37], "shanno": [31, 37], "unbound": [31, 37], "cgl": [31, 37], "conjug": [31, 37], "gradient": [31, 37], "gradient_desc": [31, 37], "correl": [31, 37], "demon": [31, 36, 37], "stage": [31, 37], "multiresolut": [31, 37], "order": [31, 37], "isotrop": [31, 37], "prior": [31, 37], "cpu": [31, 37], "simleitk": [31, 37], "1x1x1": [31, 37], "2x4": [31, 37], "8mm": [31, 37], "8x8x8": [31, 37], "initial_displacement_field": [31, 37], "smoothing_sigma_factor": [31, 37], "propag": [31, 37], "symmetr": [31, 37], "arg": [31, 37], "down": [31, 37, 38], "per": [31, 37], "neighbour": [31, 37], "bi": [31, 37], "registered_imag": [31, 37], "output_transform": [31, 37], "deformation_field": [31, 37], "registration_algorithm": [31, 37], "initial_transform": [31, 37], "multiscal": [31, 37], "fashion": [31, 37], "implicitli": [31, 37], "incorpor": [31, 37], "pyramid": [31, 37], "param": [31, 37], "displacement_field_imag": [31, 37], "spatial": [31, 37], "domain": [31, 37], "ignor": [31, 37, 39], "shrink": [31, 37], "amount": [31, 37], "done": [31, 37], "resmapl": [31, 37], "unit": [31, 33, 37, 39], "displacem": [31, 37], "moment": [31, 37], "procedur": [31, 37], "align": [31, 37], "estim": [31, 37], "final_interp": [31, 37], "sever": [31, 37], "match": [31, 37], "transformt": [31, 37], "translat": [31, 37], "rigid": [31, 36], "scaleversor": [31, 37], "scaleskewversor": [31, 37], "mattes_mi": [31, 37], "joint_hist_mi": [31, 37], "lbfgsb": [31, 37], "ants_radiu": [31, 37], "is_structur": [31, 37], "appropri": [31, 37], "sitknearestneighbor": [31, 37, 39], "sitklinear": [31, 37], "grid_spac": [31, 37], "control": [31, 37], "squared_dist": [31, 37], "squar": [31, 33, 37], "realist": [31, 36, 37], "intern": [31, 37], "particularli": [31, 37], "complex": [31, 37], "often": [31, 37], "log": [31, 37, 38], "isotropic_voxel_size_mm": [31, 37], "greater": [31, 36, 37], "original_s": [31, 37], "independ": [31, 37], "hn": 32, "alreadi": [32, 35], "bronchus_mask": 32, "roi": [33, 39], "s_z": [33, 39], "s_y": [33, 39], "s_x": [33, 39], "direciton": [33, 39], "crop_box_s": [33, 39], "crop_box_starting_index": [33, 39], "10000": 33, "400": 33, "air": 33, "properti": [33, 34], "label_imag": 33, "external_mask": 33, "fill_valu": 33, "kernel_radiu": 33, "close": 33, "label_great_vessel": 33, "label_ventricl": 33, "valve_thickness_mm": 33, "suitabl": 33, "great": 33, "ascend": 33, "thick": 33, "label_atrium": 33, "radius_mm": 33, "height_mm": 33, "perpendicular": [33, 34, 40], "sitk_image_list": 33, "condition_typ": 33, "condition_valu": 33, "scan_direct": 33, "tube": 33, "numslic": 33, "vtk": [33, 36], "represent": 33, "sitk_reference_imag": 33, "referenceimag": 33, "foreground": 33, "com_list": 33, "centrelin": 33, "atlas_label": 33, "atlas_id": 33, "structure_a": 33, "structure_b": 33, "structure_c": 33, "stop": 33, "condit": 33, "particular": 33, "atlas": 33, "stop_condition_valu": 33, "exit": 33, "success": 33, "xml": 33, "vtp": 33, "bounding_box": [34, 40], "visuali": 34, "color_rot": [34, 40], "linestyl": [34, 40], "solid": [34, 40], "aspect": 34, "clim": 34, "min_valu": [34, 40], "max_valu": [34, 40], "mid_tick": [34, 40], "norm": [34, 40], "scalar": [34, 40], "overlai": [34, 40], "invert_field": 34, "image_list": 34, "arr_slic": 34, "250": 34, "projection_nam": 34, "projection_axi": 34, "rotation_axi": [34, 39], "rotation_angl": 34, "resample_interpol": 34, "summari": 34, "vector_ax": 34, "vector_cor": 34, "vector_sag": 34, "reorient": 34, "render": [34, 40], "necessari": 34, "One": 34, "prepar": 34, "vector_field_arrai": 34, "dimension": [34, 39], "displai": [34, 40], "ortho": [34, 40], "assist": [34, 40], "draw": [34, 40], "w": [34, 40], "h": [34, 40], "hue": [34, 40], "scalar_imag": [34, 40], "cubehelix": [34, 40], "aren": [34, 36, 40], "vector_imag": [34, 40], "listedcolormap": [34, 40], "arrow": [34, 40], "ratio": [34, 40], "add_label": 34, "compris": 34, "bunch": 34, "repositori": 35, "larg": [35, 36], "latest": 35, "updat": 35, "them": 35, "amaz": 36, "design": [36, 38], "motiv": 36, "analys": 36, "mani": 36, "radiat": 36, "therapi": 36, "wide": 36, "2d": 36, "4d": 36, "jupyt": 36, "mainli": 36, "guidanc": 36, "ye": 36, "good": 36, "filesto": 36, "few": 36, "non": 36, "advanc": 36, "anatom": 36, "system": [36, 38], "agreement": 36, "beam": 36, "ey": 36, "major": 36, "shown": 36, "image_2_regist": 36, "tfm": 36, "image_1": 36, "image_2": 36, "image_2_deform": 36, "tfm_dir": 36, "magma": 36, "interpret": 36, "phillip": 36, "unsw": 36, "edu": 36, "au": 36, "robert": 36, "sydnei": 36, "easi": 38, "analysi": 38, "architectur": 38, "suffici": 38, "desktop": 38, "pc": 38, "plug": 38, "commer": 38, "caution": 38, "network": 38, "lan": 38, "www": 38, "further": 38, "consider": 38, "made": 38, "sure": 38, "wget": 38, "raw": 38, "githubusercont": 38, "txt": 38, "cd": 38, "todo": 38, "getlogg": 38, "__name__": 38, "celeri": 38, "pylint": 38, "unus": 38, "my_settings_default": 38, "outputcontournam": 38, "auto_contour_x": 38, "my": 38, "my_segmentation_tool": 38, "output_object": 38, "load_path": 38, "imageseriesread": 38, "getgdcmseriesfilenam": 38, "my_segmentation_funct": 38, "mask_fil": 38, "join": 38, "append": 38, "dicom_fil": 38, "suid": 38, "dcmread": 38, "__main__": 38, "sample_servic": 38, "8000": 38, "initdb": 38, "And": 38, "later": 38, "purpos": 38, "program": 38, "languag": 38, "platipycli": 38, "ip": 38, "api_kei": 38, "THE": 38, "algorithm_nam": 38, "add_dataset": 38, "ct_file": 38, "_ct_": 38, "add_data_object": 38, "file_path": 38, "get_default_set": 38, "contour_x": 38, "wait": 38, "finish": 38, "run_algorithm": 38, "download_output_object": 38, "output_path": 38, "come": 38, "soon": 38, "rotate_imag": 39, "rotation_centr": 39, "rotation_angle_radian": 39, "angl": 39, "vector_angl": 39, "v1": 39, "v2": 39, "taken": 39, "obtus": 39, "radian": 39, "write_nrrd_structure_set": 39, "structure_set": 39, "nrrd": 39, "use_compress": 39, "compression_level": 39, "slicer": 39, "compress": 39, "integ": 39, "attributeerror": 39}, "objects": {"": [[9, 0, 0, "-", "platipy"]], "platipy": [[10, 0, 0, "-", "backend"], [12, 0, 0, "-", "cli"], [13, 0, 0, "-", "dicom"], [22, 0, 0, "-", "imaging"]], "platipy.backend": [[10, 0, 0, "-", "api"], [10, 0, 0, "-", "application"], [10, 4, 1, "", "configure_logging"], [10, 0, 0, "-", "manage"], [10, 0, 0, "-", "models"], [10, 4, 1, "", "on_celery_setup_logging"], [11, 0, 0, "-", "sample"], [10, 0, 0, "-", "tasks"], [10, 0, 0, "-", "views"]], "platipy.backend.api": [[10, 1, 1, "", "AlgorithmEndpoint"], [10, 1, 1, "", "CustomConfig"], [10, 1, 1, "", "DataObjectDownloadEndpoint"], [10, 1, 1, "", "DataObjectEndpoint"], [10, 1, 1, "", "DataObjectsEndpoint"], [10, 1, 1, "", "DatasetEndpoint"], [10, 1, 1, "", "DatasetReadyEndpoint"], [10, 1, 1, "", "DatasetsEndpoint"], [10, 1, 1, "", "DicomLocationEndpoint"], [10, 1, 1, "", "Resource"], [10, 1, 1, "", "TaskStatus"], [10, 1, 1, "", "TriggerEndpoint"], [10, 4, 1, "", "authenticate"]], "platipy.backend.api.AlgorithmEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"]], "platipy.backend.api.CustomConfig": [[10, 2, 1, "", "RESTFUL_JSON"]], "platipy.backend.api.DataObjectDownloadEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"], [10, 2, 1, "", "parser"]], "platipy.backend.api.DataObjectEndpoint": [[10, 3, 1, "", "delete"], [10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"], [10, 2, 1, "", "parser"], [10, 3, 1, "", "post"]], "platipy.backend.api.DataObjectsEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"]], "platipy.backend.api.DatasetEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"], [10, 2, 1, "", "parser"], [10, 3, 1, "", "post"]], "platipy.backend.api.DatasetReadyEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"], [10, 2, 1, "", "parser"]], "platipy.backend.api.DatasetsEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"]], "platipy.backend.api.DicomLocationEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"], [10, 2, 1, "", "parser"], [10, 3, 1, "", "post"]], "platipy.backend.api.Resource": [[10, 2, 1, "", "method_decorators"]], "platipy.backend.api.TaskStatus": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "get"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"]], "platipy.backend.api.TriggerEndpoint": [[10, 2, 1, "", "endpoint"], [10, 3, 1, "", "mediatypes"], [10, 2, 1, "", "methods"], [10, 2, 1, "", "parser"], [10, 3, 1, "", "post"]], "platipy.backend.application": [[10, 1, 1, "", "Algorithm"], [10, 1, 1, "", "FlaskApp"]], "platipy.backend.application.Algorithm": [[10, 3, 1, "", "settings_to_json"]], "platipy.backend.application.FlaskApp": [[10, 2, 1, "", "algorithms"], [10, 2, 1, "", "api"], [10, 2, 1, "", "beat_started"], [10, 2, 1, "", "celery_started"], [10, 2, 1, "", "dicom_listener_aetitle"], [10, 2, 1, "", "dicom_listener_port"], [10, 3, 1, "", "register"], [10, 3, 1, "", "run"], [10, 3, 1, "", "run_dicom_listener"]], "platipy.backend.manage": [[10, 4, 1, "", "add_api_key"], [10, 4, 1, "", "create_db"], [10, 4, 1, "", "run_celery"]], "platipy.backend.models": [[10, 1, 1, "", "APIKey"], [10, 1, 1, "", "AlchemyEncoder"], [10, 1, 1, "", "DataObject"], [10, 1, 1, "", "Dataset"], [10, 1, 1, "", "DicomLocation"], [10, 4, 1, "", "default_timeout"]], "platipy.backend.models.APIKey": [[10, 2, 1, "", "is_admin"], [10, 2, 1, "", "key"], [10, 2, 1, "", "name"]], "platipy.backend.models.AlchemyEncoder": [[10, 3, 1, "", "default"]], "platipy.backend.models.DataObject": [[10, 2, 1, "", "children"], [10, 2, 1, "", "dataset"], [10, 2, 1, "", "dataset_id"], [10, 2, 1, "", "id"], [10, 2, 1, "", "is_fetched"], [10, 2, 1, "", "is_input"], [10, 2, 1, "", "is_sent"], [10, 2, 1, "", "meta_data"], [10, 2, 1, "", "parent"], [10, 2, 1, "", "parent_id"], [10, 2, 1, "", "path"], [10, 2, 1, "", "series_instance_uid"], [10, 2, 1, "", "status"], [10, 2, 1, "", "timestamp"], [10, 2, 1, "", "type"]], "platipy.backend.models.Dataset": [[10, 2, 1, "", "from_dicom_location"], [10, 2, 1, "", "from_dicom_location_id"], [10, 2, 1, "", "id"], [10, 2, 1, "", "input_data_objects"], [10, 2, 1, "", "output_data_objects"], [10, 2, 1, "", "owner_key"], [10, 2, 1, "", "timeout"], [10, 2, 1, "", "timestamp"], [10, 2, 1, "", "to_dicom_location"], [10, 2, 1, "", "to_dicom_location_id"]], "platipy.backend.models.DicomLocation": [[10, 2, 1, "", "ae_title"], [10, 2, 1, "", "host"], [10, 2, 1, "", "id"], [10, 2, 1, "", "name"], [10, 2, 1, "", "owner_key"], [10, 2, 1, "", "port"]], "platipy.backend.sample": [[11, 0, 0, "-", "sample"]], "platipy.backend.sample.sample": [[11, 4, 1, "", "primitive_body_segmentation"]], "platipy.backend.views": [[10, 4, 1, "", "add_endpoint"], [10, 4, 1, "", "dashboard"], [10, 4, 1, "", "fetch_log"], [10, 4, 1, "", "fetch_status"], [10, 4, 1, "", "view_endpoint"]], "platipy.cli": [[12, 0, 0, "-", "dicom_crawler"], [12, 0, 0, "-", "nifti_to_rtstruct"], [12, 0, 0, "-", "nifti_to_series"], [12, 0, 0, "-", "rtstruct_to_nifti"], [12, 0, 0, "-", "run"], [12, 0, 0, "-", "segmentation"], [12, 0, 0, "-", "tcia_download"]], "platipy.cli.run": [[12, 4, 1, "", "platipy_cli"]], "platipy.dicom": [[14, 0, 0, "-", "communication"], [16, 0, 0, "-", "download"], [17, 0, 0, "-", "io"], [21, 0, 0, "-", "tests"]], "platipy.dicom.communication": [[14, 0, 0, "-", "connector"]], "platipy.dicom.communication.connector": [[14, 1, 1, "", "DicomConnector"]], "platipy.dicom.communication.connector.DicomConnector": [[14, 3, 1, "", "do_find"], [14, 3, 1, "", "download_series"], [14, 3, 1, "", "get_series_for_study"], [14, 3, 1, "", "get_studies_for_patient"], [14, 3, 1, "", "listen"], [14, 3, 1, "", "move_series"], [14, 3, 1, "", "on_association_accepted"], [14, 3, 1, "", "on_association_released"], [14, 3, 1, "", "on_c_echo"], [14, 3, 1, "", "on_c_store"], [14, 3, 1, "", "send_dcm"], [14, 3, 1, "", "verify"]], "platipy.dicom.download": [[16, 0, 0, "-", "tcia"]], "platipy.dicom.download.tcia": [[16, 4, 1, "", "fetch_data"], [16, 4, 1, "", "get_collections"], [16, 4, 1, "", "get_hn_data"], [16, 4, 1, "", "get_lung_data"], [16, 4, 1, "", "get_modalities_in_collection"], [16, 4, 1, "", "get_patients_in_collection"]], "platipy.dicom.io": [[17, 0, 0, "-", "crawl"], [17, 0, 0, "-", "nifti_to_rtstruct"], [17, 0, 0, "-", "nifti_to_series"], [5, 0, 0, "-", "rtdose_to_nifti"], [17, 0, 0, "-", "rtstruct_to_nifti"]], "platipy.dicom.io.crawl": [[17, 4, 1, "", "fix_missing_data"], [17, 4, 1, "", "flatten"], [17, 4, 1, "", "get_dicom_info_from_description"], [17, 4, 1, "", "get_suv_bw_scale_factor"], [17, 4, 1, "", "process_dicom_directory"], [17, 4, 1, "", "process_dicom_file_list"], [17, 4, 1, "", "process_dicom_series"], [17, 4, 1, "", "safe_sort_dicom_image_list"], [17, 4, 1, "", "transform_point_set_from_dicom_struct"], [17, 4, 1, "", "write_output_data_to_disk"]], "platipy.dicom.io.nifti_to_rtstruct": [[17, 4, 1, "", "convert_nifti"]], "platipy.dicom.io.nifti_to_series": [[17, 4, 1, "", "convert_nifti_to_dicom_series"]], "platipy.dicom.io.rtdose_to_nifti": [[5, 4, 1, "", "convert_rtdose"]], "platipy.dicom.io.rtstruct_to_nifti": [[17, 4, 1, "", "convert_rtstruct"], [17, 4, 1, "", "fix_missing_data"], [17, 4, 1, "", "read_dicom_image"], [17, 4, 1, "", "read_dicom_struct_file"], [17, 4, 1, "", "transform_point_set_from_dicom_struct"]], "platipy.dicom.tests": [[21, 0, 0, "-", "test_convert"]], "platipy.dicom.tests.test_convert": [[21, 4, 1, "", "dicom_data"], [21, 4, 1, "", "nifti_data"], [21, 4, 1, "", "test_convert_dicom_to_nifti"], [21, 4, 1, "", "test_convert_nifti_to_dicom"]], "platipy.imaging.dose": [[6, 0, 0, "-", "dvh"]], "platipy.imaging.dose.dvh": [[6, 4, 1, "", "calculate_d_cc_x"], [6, 4, 1, "", "calculate_d_x"], [6, 4, 1, "", "calculate_dvh"], [6, 4, 1, "", "calculate_dvh_for_labels"], [6, 4, 1, "", "calculate_v_x"]], "platipy.imaging": [[26, 0, 0, "-", "generation"], [27, 0, 0, "-", "label"], [28, 0, 0, "-", "projects"], [31, 0, 0, "-", "registration"], [32, 0, 0, "-", "tests"], [33, 0, 0, "-", "utils"], [34, 0, 0, "-", "visualisation"]], "platipy.imaging.generation": [[26, 0, 0, "-", "augment"], [26, 0, 0, "-", "dvf"], [26, 0, 0, "-", "image"], [26, 0, 0, "-", "mask"]], "platipy.imaging.generation.augment": [[26, 1, 1, "", "ContractAugment"], [26, 1, 1, "", "DeformableAugment"], [26, 1, 1, "", "ExpandAugment"], [26, 1, 1, "", "ShiftAugment"], [26, 4, 1, "", "apply_augmentation"], [26, 4, 1, "", "generate_random_augmentation"]], "platipy.imaging.generation.augment.ContractAugment": [[26, 3, 1, "", "augment"]], "platipy.imaging.generation.augment.DeformableAugment": [[26, 3, 1, "", "augment"]], "platipy.imaging.generation.augment.ExpandAugment": [[26, 3, 1, "", "augment"]], "platipy.imaging.generation.augment.ShiftAugment": [[26, 3, 1, "", "augment"]], "platipy.imaging.generation.dvf": [[26, 4, 1, "", "generate_field_asymmetric_contract"], [26, 4, 1, "", "generate_field_asymmetric_extend"], [26, 4, 1, "", "generate_field_expand"], [26, 4, 1, "", "generate_field_radial_bend"], [26, 4, 1, "", "generate_field_shift"]], "platipy.imaging.generation.image": [[26, 4, 1, "", "insert_cylinder"], [26, 4, 1, "", "insert_cylinder_image"], [26, 4, 1, "", "insert_sphere"], [26, 4, 1, "", "insert_sphere_image"]], "platipy.imaging.generation.mask": [[26, 4, 1, "", "extend_mask"], [26, 4, 1, "", "get_bone_mask"], [26, 4, 1, "", "get_external_mask"]], "platipy.imaging.label": [[39, 0, 0, "-", "comparison"], [27, 0, 0, "-", "fusion"], [27, 0, 0, "-", "iar"], [27, 0, 0, "-", "projection"], [39, 0, 0, "-", "utils"]], "platipy.imaging.label.comparison": [[39, 4, 1, "", "compute_apl"], [39, 4, 1, "", "compute_metric_dsc"], [39, 4, 1, "", "compute_metric_hd"], [39, 4, 1, "", "compute_metric_masd"], [39, 4, 1, "", "compute_metric_mean_apl"], [39, 4, 1, "", "compute_metric_sensitivity"], [39, 4, 1, "", "compute_metric_specificity"], [39, 4, 1, "", "compute_metric_total_apl"], [39, 4, 1, "", "compute_surface_dsc"], [39, 4, 1, "", "compute_surface_metrics"], [39, 4, 1, "", "compute_volume"], [39, 4, 1, "", "compute_volume_metrics"]], "platipy.imaging.label.fusion": [[27, 4, 1, "", "combine_labels"], [27, 4, 1, "", "combine_labels_staple"], [27, 4, 1, "", "compute_weight_map"], [27, 4, 1, "", "mutual_information"], [27, 4, 1, "", "process_probability_image"]], "platipy.imaging.label.iar": [[27, 4, 1, "", "gaussian_curve"], [27, 4, 1, "", "median_absolute_deviation"], [27, 4, 1, "", "run_iar"]], "platipy.imaging.label.projection": [[27, 4, 1, "", "evaluate_distance_on_surface"], [27, 4, 1, "", "evaluate_distance_to_reference"], [27, 4, 1, "", "regrid_spherical_data"]], "platipy.imaging.label.utils": [[39, 4, 1, "", "binary_decode_image"], [39, 4, 1, "", "binary_encode_structure_list"], [39, 4, 1, "", "correct_volume_overlap"], [39, 4, 1, "", "generate_primes"], [39, 4, 1, "", "get_com"], [39, 4, 1, "", "prime_decode_image"], [39, 4, 1, "", "prime_encode_structure_list"], [39, 4, 1, "", "vectorised_transform_index_to_physical_point"], [39, 4, 1, "", "vectorised_transform_physical_point_to_index"]], "platipy.imaging.projects": [[29, 0, 0, "-", "bronchus"], [30, 0, 0, "-", "cardiac"]], "platipy.imaging.projects.bronchus": [[29, 0, 0, "-", "bronchus"], [29, 0, 0, "-", "run"]], "platipy.imaging.projects.bronchus.bronchus": [[29, 4, 1, "", "fast_mask"], [29, 4, 1, "", "generate_airway_mask"], [29, 4, 1, "", "generate_lung_mask"], [29, 4, 1, "", "get_distance"]], "platipy.imaging.projects.bronchus.run": [[29, 4, 1, "", "run_bronchus_segmentation"]], "platipy.imaging.projects.cardiac": [[30, 0, 0, "-", "run"], [30, 0, 0, "-", "service"]], "platipy.imaging.projects.cardiac.run": [[30, 4, 1, "", "display_open_cardiac_zip_url_locations"], [30, 4, 1, "", "install_atlas_from_zipfile"], [30, 4, 1, "", "install_hybrid_cardiac_from_zip"], [30, 4, 1, "", "install_open_atlas"], [30, 4, 1, "", "run_cardiac_segmentation"], [30, 4, 1, "", "run_hybrid_segmentation"]], "platipy.imaging.projects.cardiac.service": [[30, 4, 1, "", "cardiac_service"], [30, 4, 1, "", "cardiac_structure_guided_service"]], "platipy.imaging.registration": [[37, 0, 0, "-", "deformable"], [37, 0, 0, "-", "linear"], [37, 0, 0, "-", "utils"]], "platipy.imaging.registration.deformable": [[37, 4, 1, "", "bspline_registration"], [37, 4, 1, "", "fast_symmetric_forces_demons_registration"], [37, 4, 1, "", "multiscale_demons"]], "platipy.imaging.registration.linear": [[37, 4, 1, "", "alignment_registration"], [37, 4, 1, "", "linear_registration"]], "platipy.imaging.registration.utils": [[37, 4, 1, "", "apply_deformable_transform"], [37, 4, 1, "", "apply_linear_transform"], [37, 4, 1, "", "apply_transform"], [37, 4, 1, "", "control_point_spacing_distance_to_number"], [37, 4, 1, "", "convert_mask_to_distance_map"], [37, 4, 1, "", "convert_mask_to_reg_structure"], [37, 4, 1, "", "deformable_registration_command_iteration"], [37, 4, 1, "", "registration_command_iteration"], [37, 4, 1, "", "smooth_and_resample"], [37, 4, 1, "", "stage_iteration"]], "platipy.imaging.tests": [[32, 0, 0, "-", "data"], [32, 0, 0, "-", "test_bronchus"], [32, 0, 0, "-", "test_cardiac"], [32, 0, 0, "-", "test_visualiser"]], "platipy.imaging.tests.data": [[32, 4, 1, "", "get_hn_nifti"], [32, 4, 1, "", "get_lung_dicom"], [32, 4, 1, "", "get_lung_nifti"]], "platipy.imaging.tests.test_bronchus": [[32, 4, 1, "", "assert_bronchus_mask"], [32, 4, 1, "", "assert_lung_mask"], [32, 4, 1, "", "bronchus_data"], [32, 4, 1, "", "test_bronchus_segmentation"], [32, 4, 1, "", "test_lung_segmentation"]], "platipy.imaging.tests.test_cardiac": [[32, 4, 1, "", "cardiac_data"], [32, 4, 1, "", "test_cardiac_service"], [32, 4, 1, "", "test_cardiac_structure_guided_service"]], "platipy.imaging.tests.test_visualiser": [[32, 4, 1, "", "nifti_data"], [32, 4, 1, "", "test_comparison_overlay_visualisation"], [32, 4, 1, "", "test_contour_visualisation"], [32, 4, 1, "", "test_scalar_overlay_visualisation"]], "platipy.imaging.utils": [[39, 0, 0, "-", "crop"], [39, 0, 0, "-", "geometry"], [39, 0, 0, "-", "io"], [33, 0, 0, "-", "lung"], [33, 0, 0, "-", "valve"], [33, 0, 0, "-", "vessel"]], "platipy.imaging.utils.crop": [[39, 4, 1, "", "crop_to_label_extent"], [39, 4, 1, "", "crop_to_roi"], [39, 4, 1, "", "label_to_roi"]], "platipy.imaging.utils.geometry": [[39, 4, 1, "", "rotate_image"], [39, 4, 1, "", "vector_angle"]], "platipy.imaging.utils.io": [[39, 4, 1, "", "write_nrrd_structure_set"]], "platipy.imaging.utils.lung": [[33, 4, 1, "", "detect_holes"], [33, 4, 1, "", "fill_holes"], [33, 4, 1, "", "get_external_mask"], [33, 4, 1, "", "get_lung_mask"]], "platipy.imaging.utils.valve": [[33, 4, 1, "", "generate_valve_from_great_vessel"], [33, 4, 1, "", "generate_valve_using_cylinder"]], "platipy.imaging.utils.vessel": [[33, 4, 1, "", "com_from_image_list"], [33, 4, 1, "", "convert_simpleitk_to_vtk"], [33, 4, 1, "", "simpleitk_image_from_vtk_tube"], [33, 4, 1, "", "tube_from_com_list"], [33, 4, 1, "", "vessel_spline_generation"], [33, 4, 1, "", "write_vtk_tube_to_file"]], "platipy.imaging.visualisation": [[34, 0, 0, "-", "utils"], [34, 0, 0, "-", "visualiser"]], "platipy.imaging.visualisation.utils": [[34, 1, 1, "", "VisualiseBoundingBox"], [34, 1, 1, "", "VisualiseComparisonOverlay"], [34, 1, 1, "", "VisualiseContour"], [34, 1, 1, "", "VisualiseImage"], [34, 1, 1, "", "VisualiseScalarOverlay"], [34, 1, 1, "", "VisualiseVectorOverlay"], [34, 4, 1, "", "generate_comparison_colormix"], [34, 4, 1, "", "project_onto_arbitrary_plane"], [34, 4, 1, "", "reorientate_vector_field"], [34, 4, 1, "", "return_slice"], [34, 4, 1, "", "subsample_vector_field"], [34, 4, 1, "", "vector_image_grid"]], "platipy.imaging.visualisation.visualiser": [[40, 1, 1, "", "ImageVisualiser"], [34, 6, 1, "", "logger"]], "platipy.imaging.visualisation.visualiser.ImageVisualiser": [[40, 3, 1, "", "add_bounding_box"], [40, 3, 1, "", "add_comparison_overlay"], [40, 3, 1, "", "add_contour"], [40, 3, 1, "", "add_scalar_overlay"], [40, 3, 1, "", "add_vector_overlay"], [40, 3, 1, "", "clear"], [34, 3, 1, "", "draw_bounding_box_on_axes"], [34, 5, 1, "", "image"], [34, 5, 1, "", "labelmap"], [40, 3, 1, "", "set_limits_from_label"], [40, 3, 1, "", "show"]], "dicom_crawler": [[3, 7, 1, "cmdoption-dicom_crawler-dose_format", "--dose_format"], [3, 7, 1, "cmdoption-dicom_crawler-file_suffix", "--file_suffix"], [3, 7, 1, "cmdoption-dicom_crawler-image_format", "--image_format"], [3, 7, 1, "cmdoption-dicom_crawler-i", "--input_dir"], [3, 7, 1, "cmdoption-dicom_crawler-o", "--output_dir"], [3, 7, 1, "cmdoption-dicom_crawler-overwrite", "--overwrite"], [3, 7, 1, "cmdoption-dicom_crawler-s", "--short_description"], [3, 7, 1, "cmdoption-dicom_crawler-b", "--sort_by"], [3, 7, 1, "cmdoption-dicom_crawler-structure_format", "--structure_format"], [3, 7, 1, "cmdoption-dicom_crawler-v", "--verbose"], [3, 7, 1, "cmdoption-dicom_crawler-b", "-b"], [3, 7, 1, "cmdoption-dicom_crawler-i", "-i"], [3, 7, 1, "cmdoption-dicom_crawler-o", "-o"], [3, 7, 1, "cmdoption-dicom_crawler-s", "-s"], [3, 7, 1, "cmdoption-dicom_crawler-v", "-v"]], "nifti_to_rtstruct": [[3, 7, 1, "cmdoption-nifti_to_rtstruct-d", "--dcm_file"], [3, 7, 1, "cmdoption-nifti_to_rtstruct-m", "--mask"], [3, 7, 1, "cmdoption-nifti_to_rtstruct-o", "--out_rt_filename"], [3, 7, 1, "cmdoption-nifti_to_rtstruct-d", "-d"], [3, 7, 1, "cmdoption-nifti_to_rtstruct-m", "-m"], [3, 7, 1, "cmdoption-nifti_to_rtstruct-o", "-o"]], "nifti_to_series": [[3, 7, 1, "cmdoption-nifti_to_series-d", "--dcm"], [3, 7, 1, "cmdoption-nifti_to_series-i", "--image"], [3, 7, 1, "cmdoption-nifti_to_series-o", "--output_directory"], [3, 7, 1, "cmdoption-nifti_to_series-t", "--tag"], [3, 7, 1, "cmdoption-nifti_to_series-d", "-d"], [3, 7, 1, "cmdoption-nifti_to_series-i", "-i"], [3, 7, 1, "cmdoption-nifti_to_series-o", "-o"], [3, 7, 1, "cmdoption-nifti_to_series-t", "-t"]], "rtstruct_to_nifti": [[3, 7, 1, "cmdoption-rtstruct_to_nifti-i", "--dcm_img"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-r", "--dcm_rt_file"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-od", "--output_dir"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-oi", "--output_img"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-p", "--prefix"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-spacing", "--spacing"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-i", "-i"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-od", "-od"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-oi", "-oi"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-p", "-p"], [3, 7, 1, "cmdoption-rtstruct_to_nifti-r", "-r"]], "segmentation": [[3, 7, 1, "cmdoption-segmentation-c", "--config"], [3, 7, 1, "cmdoption-segmentation-d", "--default"], [3, 7, 1, "cmdoption-segmentation-o", "--output"], [3, 7, 1, "cmdoption-segmentation-c", "-c"], [3, 7, 1, "cmdoption-segmentation-d", "-d"], [3, 7, 1, "cmdoption-segmentation-o", "-o"], [3, 7, 1, "cmdoption-segmentation-arg-ALGORITHM", "ALGORITHM"], [3, 7, 1, "cmdoption-segmentation-arg-INPUT_PATH", "INPUT_PATH"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property", "6": "py:data", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "data", "Python data"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"dvh": [0, 6, 35], "analysi": [0, 35, 36], "import": [0, 1], "modul": [0, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "download": [0, 1, 16, 35], "test": [0, 1, 4, 21, 32], "data": [0, 1, 32], "load": 0, "visualis": [0, 1, 34, 35, 36, 40], "comput": 0, "plot": 0, "metric": 0, "imag": [1, 2, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40], "read": 1, "displai": 1, "contour": [1, 36], "without": 1, "us": [1, 38], "project": [1, 27, 28, 29, 30], "scalar": 1, "field": [1, 36], "overlai": 1, "vector": [1, 36], "compar": 1, "two": 1, "combin": 1, "cardiac": [2, 30], "segment": [2, 3, 12, 35], "quickstart": 2, "system": 2, "requir": 2, "instal": [2, 35], "run": [2, 12, 29, 30, 38], "from": [2, 35], "python": [2, 35, 36], "script": 2, "command": [2, 3, 4, 35], "line": [2, 3, 4, 35], "interfac": [2, 35], "cli": [2, 12, 35], "jupyt": [2, 35], "notebook": [2, 35], "troubleshoot": 2, "problem": 2, "i": [2, 36], "get": [2, 35, 36], "an": [2, 38], "error": 2, "messag": 2, "indic": 2, "cuda": 2, "kernel": 2, "avail": 2, "execut": 2, "devic": 2, "platipi": [2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38], "hang": 2, "depend": 2, "m": 2, "unabl": 2, "exampl": [2, 7, 35], "googl": 2, "colab": 2, "refer": 2, "tool": [3, 4, 35], "dicom_crawl": [3, 12], "nifti_to_rtstruct": [3, 12, 17, 18], "nifti_to_seri": [3, 12, 17, 19], "rtstruct_to_nifti": [3, 12, 17, 20], "contribut": 4, "git": 4, "poetri": 4, "style": 4, "guid": 4, "structur": 4, "write": 4, "unit": 4, "provid": 4, "dicom": [5, 13, 14, 15, 16, 17, 18, 19, 20, 21], "convers": 5, "nifti": 5, "rtstuct": 5, "rtstruct": 5, "rtdose": 5, "dose": 6, "volum": 6, "histogram": 6, "packag": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "subpackag": [9, 10, 13, 22, 28], "content": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34], "backend": [10, 11], "submodul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34], "api": [10, 38], "applic": 10, "keep": 10, "mind": 10, "client": 10, "manag": 10, "model": 10, "task": 10, "view": 10, "sampl": 11, "tcia_download": 12, "commun": 14, "connector": 14, "dicom_directory_crawl": 15, "conversion_util": 15, "tcia": [16, 35], "io": [17, 39], "crawl": 17, "convert": [18, 19, 20], "export_to_rtstruct": 18, "gen_contour": 18, "test_convert": 21, "test_crawl": 21, "atla": [23, 35], "iterative_atlas_remov": 23, "label_fus": 23, "augment": [24, 26], "defaug": 24, "deformation_field": 25, "deformation_field_oper": 25, "gener": [26, 35], "dvf": 26, "mask": 26, "label": [27, 39], "comparison": [27, 39], "fusion": 27, "iar": 27, "util": [27, 31, 33, 34, 37, 39], "bronchu": 29, "servic": [29, 30, 38], "registr": [31, 37], "deform": [31, 35, 36, 37], "linear": 31, "test_bronchu": 32, "test_cardiac": 32, "test_visualis": 32, "crop": [33, 39], "lung": 33, "valv": 33, "vessel": 33, "anim": 34, "start": [35, 36], "demonstr": 35, "": 35, "perform": 35, "hybrid": 35, "deep": 35, "learn": 35, "heart": 35, "automat": 35, "bronchial": 35, "tree": 35, "synthet": 35, "head": 35, "neck": 35, "document": 36, "process": 36, "librari": 36, "toolkit": 36, "medic": 36, "what": 36, "can": 36, "do": 36, "some": 36, "regist": 36, "calcul": 36, "author": 36, "rigid": 37, "algorithm": 38, "deploy": 38, "framework": 38, "prerequisit": 38, "develop": 38, "implement": 38, "initialis": 38, "databas": 38, "add": 38, "kei": 38, "deploi": 38, "build": 38, "docker": 38, "secur": 38, "ssl": 38, "geometri": 39}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"DVH Analysis": [[0, "DVH-Analysis"]], "Import Modules": [[0, "Import-Modules"], [1, "Import-Modules"]], "Download Test Data": [[0, "Download-Test-Data"], [1, "Download-Test-Data"]], "Load data": [[0, "Load-data"]], "Visualise data": [[0, "Visualise-data"]], "Compute DVH": [[0, "Compute-DVH"]], "Plot DVH": [[0, "Plot-DVH"]], "DVH Metrics": [[0, "DVH-Metrics"]], "Visualise Images": [[1, "Visualise-Images"]], "Read in the data": [[1, "Read-in-the-data"]], "Display Image with Contours": [[1, "Display-Image-with-Contours"]], "Display Image without Contours": [[1, "Display-Image-without-Contours"]], "Display Image using Projection": [[1, "Display-Image-using-Projection"]], "Display Scalar Field on Image": [[1, "Display-Scalar-Field-on-Image"]], "Overlay Vector Fields on Image": [[1, "Overlay-Vector-Fields-on-Image"]], "Compare two Images": [[1, "Compare-two-Images"]], "Combine Visualisations": [[1, "Combine-Visualisations"]], "Cardiac Segmentation": [[2, "cardiac-segmentation"]], "Quickstart": [[2, "quickstart"]], "System Requirements": [[2, "system-requirements"]], "Installation": [[2, "installation"], [35, "installation"]], "Run from a Python script": [[2, "run-from-a-python-script"]], "Run from Command Line Interface (CLI)": [[2, "run-from-command-line-interface-cli"]], "Run from a Jupyter Notebook": [[2, "run-from-a-jupyter-notebook"]], "Troubleshooting": [[2, "troubleshooting"]], "Problem: I get an error message indicating a CUDA error: no kernel image is available for execution on the device": [[2, "problem-i-get-an-error-message-indicating-a-cuda-error-no-kernel-image-is-available-for-execution-on-the-device"]], "Problem: Installing PlatiPy hangs or indicates a dependency error": [[2, "problem-installing-platipy-hangs-or-indicates-a-dependency-error"]], "Problem: I\u2019m unable to run the example Jupyter Notebook on Google Colab": [[2, "problem-i-m-unable-to-run-the-example-jupyter-notebook-on-google-colab"]], "References": [[2, "references"]], "Command Line Tools": [[3, "command-line-tools"]], "dicom_crawler": [[3, "dicom-crawler"]], "segmentation": [[3, "segmentation"]], "nifti_to_rtstruct": [[3, "nifti-to-rtstruct"]], "nifti_to_series": [[3, "nifti-to-series"]], "rtstruct_to_nifti": [[3, "rtstruct-to-nifti"]], "Contributing": [[4, "contributing"]], "Git": [[4, "git"]], "Poetry": [[4, "poetry"]], "Style Guide": [[4, "style-guide"]], "Structure": [[4, "structure"]], "Writing unit tests": [[4, "writing-unit-tests"]], "Providing command line tools": [[4, "providing-command-line-tools"]], "DICOM Conversion": [[5, "dicom-conversion"]], "NIfTI to DICOM RTSTUCT": [[5, "module-platipy.dicom.io.nifti_to_rtstruct"]], "DICOM RTSTRUCT to NIfTI": [[5, "dicom-rtstruct-to-nifti"]], "DICOM RTDOSE to NIfTI": [[5, "module-platipy.dicom.io.rtdose_to_nifti"]], "Dose": [[6, "dose"]], "Dose Volume Histograms (DVH)": [[6, "module-platipy.imaging.dose.dvh"]], "Examples": [[7, "examples"]], "platipy": [[8, "platipy"]], "platipy package": [[9, "platipy-package"]], "Subpackages": [[9, "subpackages"], [10, "subpackages"], [13, "subpackages"], [22, "subpackages"], [28, "subpackages"]], "Module contents": [[9, "module-platipy"], [10, "module-platipy.backend"], [11, "module-platipy.backend.sample"], [12, "module-platipy.cli"], [13, "module-platipy.dicom"], [14, "module-platipy.dicom.communication"], [15, "module-contents"], [16, "module-platipy.dicom.download"], [17, "module-platipy.dicom.io"], [18, "module-contents"], [19, "module-contents"], [20, "module-contents"], [21, "module-platipy.dicom.tests"], [22, "module-platipy.imaging"], [23, "module-contents"], [24, "module-contents"], [25, "module-contents"], [26, "module-platipy.imaging.generation"], [27, "module-platipy.imaging.label"], [28, "module-platipy.imaging.projects"], [29, "module-platipy.imaging.projects.bronchus"], [30, "module-platipy.imaging.projects.cardiac"], [31, "module-platipy.imaging.registration"], [32, "module-platipy.imaging.tests"], [33, "module-platipy.imaging.utils"], [34, "module-platipy.imaging.visualisation"]], "platipy.backend package": [[10, "platipy-backend-package"]], "Submodules": [[10, "submodules"], [11, "submodules"], [12, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"], [17, "submodules"], [18, "submodules"], [19, "submodules"], [20, "submodules"], [21, "submodules"], [23, "submodules"], [24, "submodules"], [25, "submodules"], [26, "submodules"], [27, "submodules"], [29, "submodules"], [30, "submodules"], [31, "submodules"], [32, "submodules"], [33, "submodules"], [34, "submodules"]], "platipy.backend.api module": [[10, "module-platipy.backend.api"]], "platipy.backend.application module": [[10, "module-platipy.backend.application"]], "Keep in Mind": [[10, null]], "platipy.backend.client module": [[10, "platipy-backend-client-module"]], "platipy.backend.manage module": [[10, "module-platipy.backend.manage"]], "platipy.backend.models module": [[10, "module-platipy.backend.models"]], "platipy.backend.tasks module": [[10, "module-platipy.backend.tasks"]], "platipy.backend.views module": [[10, "module-platipy.backend.views"]], "platipy.backend.sample package": [[11, "platipy-backend-sample-package"]], "platipy.backend.sample.sample module": [[11, "module-platipy.backend.sample.sample"]], "platipy.cli package": [[12, "platipy-cli-package"]], "platipy.cli.dicom_crawler module": [[12, "module-platipy.cli.dicom_crawler"]], "platipy.cli.nifti_to_rtstruct module": [[12, "module-platipy.cli.nifti_to_rtstruct"]], "platipy.cli.nifti_to_series module": [[12, "module-platipy.cli.nifti_to_series"]], "platipy.cli.rtstruct_to_nifti module": [[12, "module-platipy.cli.rtstruct_to_nifti"]], "platipy.cli.run module": [[12, "module-platipy.cli.run"]], "platipy.cli.segmentation module": [[12, "module-platipy.cli.segmentation"]], "platipy.cli.tcia_download module": [[12, "module-platipy.cli.tcia_download"]], "platipy.dicom package": [[13, "platipy-dicom-package"]], "platipy.dicom.communication package": [[14, "platipy-dicom-communication-package"]], "platipy.dicom.communication.connector module": [[14, "module-platipy.dicom.communication.connector"]], "platipy.dicom.dicom_directory_crawler package": [[15, "platipy-dicom-dicom-directory-crawler-package"]], "platipy.dicom.dicom_directory_crawler.conversion_utils module": [[15, "platipy-dicom-dicom-directory-crawler-conversion-utils-module"]], "platipy.dicom.download package": [[16, "platipy-dicom-download-package"]], "platipy.dicom.download.tcia module": [[16, "module-platipy.dicom.download.tcia"]], "platipy.dicom.io package": [[17, "platipy-dicom-io-package"]], "platipy.dicom.io.crawl module": [[17, "module-platipy.dicom.io.crawl"]], "platipy.dicom.io.nifti_to_rtstruct module": [[17, "module-platipy.dicom.io.nifti_to_rtstruct"]], "platipy.dicom.io.nifti_to_series module": [[17, "module-platipy.dicom.io.nifti_to_series"]], "platipy.dicom.io.rtstruct_to_nifti module": [[17, "module-platipy.dicom.io.rtstruct_to_nifti"]], "platipy.dicom.nifti_to_rtstruct package": [[18, "platipy-dicom-nifti-to-rtstruct-package"]], "platipy.dicom.nifti_to_rtstruct.convert module": [[18, "platipy-dicom-nifti-to-rtstruct-convert-module"]], "platipy.dicom.nifti_to_rtstruct.export_to_rtstruct module": [[18, "platipy-dicom-nifti-to-rtstruct-export-to-rtstruct-module"]], "platipy.dicom.nifti_to_rtstruct.gen_contours module": [[18, "platipy-dicom-nifti-to-rtstruct-gen-contours-module"]], "platipy.dicom.nifti_to_series package": [[19, "platipy-dicom-nifti-to-series-package"]], "platipy.dicom.nifti_to_series.convert module": [[19, "platipy-dicom-nifti-to-series-convert-module"]], "platipy.dicom.rtstruct_to_nifti package": [[20, "platipy-dicom-rtstruct-to-nifti-package"]], "platipy.dicom.rtstruct_to_nifti.convert module": [[20, "platipy-dicom-rtstruct-to-nifti-convert-module"]], "platipy.dicom.tests package": [[21, "platipy-dicom-tests-package"]], "platipy.dicom.tests.test_convert module": [[21, "module-platipy.dicom.tests.test_convert"]], "platipy.dicom.tests.test_crawl module": [[21, "platipy-dicom-tests-test-crawl-module"]], "platipy.imaging package": [[22, "platipy-imaging-package"]], "platipy.imaging.atlas package": [[23, "platipy-imaging-atlas-package"]], "platipy.imaging.atlas.iterative_atlas_removal module": [[23, "platipy-imaging-atlas-iterative-atlas-removal-module"]], "platipy.imaging.atlas.label_fusion module": [[23, "platipy-imaging-atlas-label-fusion-module"]], "platipy.imaging.augment package": [[24, "platipy-imaging-augment-package"]], "platipy.imaging.augment.defaug module": [[24, "platipy-imaging-augment-defaug-module"]], "platipy.imaging.deformation_fields package": [[25, "platipy-imaging-deformation-fields-package"]], "platipy.imaging.deformation_fields.deformation_field_operations module": [[25, "platipy-imaging-deformation-fields-deformation-field-operations-module"]], "platipy.imaging.generation package": [[26, "platipy-imaging-generation-package"]], "platipy.imaging.generation.augment module": [[26, "module-platipy.imaging.generation.augment"]], "platipy.imaging.generation.dvf module": [[26, "module-platipy.imaging.generation.dvf"]], "platipy.imaging.generation.image module": [[26, "module-platipy.imaging.generation.image"]], "platipy.imaging.generation.mask module": [[26, "module-platipy.imaging.generation.mask"]], "platipy.imaging.label package": [[27, "platipy-imaging-label-package"]], "platipy.imaging.label.comparison module": [[27, "module-platipy.imaging.label.comparison"]], "platipy.imaging.label.fusion module": [[27, "module-platipy.imaging.label.fusion"]], "platipy.imaging.label.iar module": [[27, "module-platipy.imaging.label.iar"]], "platipy.imaging.label.projection module": [[27, "module-platipy.imaging.label.projection"]], "platipy.imaging.label.utils module": [[27, "module-platipy.imaging.label.utils"]], "platipy.imaging.projects package": [[28, "platipy-imaging-projects-package"]], "platipy.imaging.projects.bronchus package": [[29, "platipy-imaging-projects-bronchus-package"]], "platipy.imaging.projects.bronchus.bronchus module": [[29, "module-platipy.imaging.projects.bronchus.bronchus"]], "platipy.imaging.projects.bronchus.run module": [[29, "module-platipy.imaging.projects.bronchus.run"]], "platipy.imaging.projects.bronchus.service module": [[29, "platipy-imaging-projects-bronchus-service-module"]], "platipy.imaging.projects.cardiac package": [[30, "platipy-imaging-projects-cardiac-package"]], "platipy.imaging.projects.cardiac.run module": [[30, "module-platipy.imaging.projects.cardiac.run"]], "platipy.imaging.projects.cardiac.service module": [[30, "module-platipy.imaging.projects.cardiac.service"]], "platipy.imaging.registration package": [[31, "platipy-imaging-registration-package"]], "platipy.imaging.registration.deformable module": [[31, "module-platipy.imaging.registration.deformable"]], "platipy.imaging.registration.linear module": [[31, "module-platipy.imaging.registration.linear"]], "platipy.imaging.registration.utils module": [[31, "module-platipy.imaging.registration.utils"]], "platipy.imaging.tests package": [[32, "platipy-imaging-tests-package"]], "platipy.imaging.tests.data module": [[32, "module-platipy.imaging.tests.data"]], "platipy.imaging.tests.test_bronchus module": [[32, "module-platipy.imaging.tests.test_bronchus"]], "platipy.imaging.tests.test_cardiac module": [[32, "module-platipy.imaging.tests.test_cardiac"]], "platipy.imaging.tests.test_visualiser module": [[32, "module-platipy.imaging.tests.test_visualiser"]], "platipy.imaging.utils package": [[33, "platipy-imaging-utils-package"]], "platipy.imaging.utils.crop module": [[33, "module-platipy.imaging.utils.crop"]], "platipy.imaging.utils.lung module": [[33, "module-platipy.imaging.utils.lung"]], "platipy.imaging.utils.valve module": [[33, "module-platipy.imaging.utils.valve"]], "platipy.imaging.utils.vessel module": [[33, "module-platipy.imaging.utils.vessel"]], "platipy.imaging.visualisation package": [[34, "platipy-imaging-visualisation-package"]], "platipy.imaging.visualisation.animation module": [[34, "platipy-imaging-visualisation-animation-module"]], "platipy.imaging.visualisation.utils module": [[34, "module-platipy.imaging.visualisation.utils"]], "platipy.imaging.visualisation.visualiser module": [[34, "module-platipy.imaging.visualisation.visualiser"]], "Getting Started": [[35, "getting-started"], [35, "id1"]], "Command Line Interface (CLI)": [[35, "command-line-interface-cli"]], "Python": [[35, "python"]], "Jupyter Notebooks": [[35, "jupyter-notebooks"]], "Demonstration of PlatiPy\u2019s Visualisation tools": [[35, "demonstration-of-platipy-s-visualisation-tools"]], "Example DVH analysis": [[35, "example-dvh-analysis"]], "Download from TCIA Example": [[35, "download-from-tcia-example"]], "Example to Perform Hybrid (Deep Learning+Atlas) Heart Segmentation": [[35, "example-to-perform-hybrid-deep-learning-atlas-heart-segmentation"]], "Example to Perform Automatic Bronchial Tree Segmentation": [[35, "example-to-perform-automatic-bronchial-tree-segmentation"]], "Examples to Generate Synthetic Deformations for Head & Neck": [[35, "examples-to-generate-synthetic-deformations-for-head-neck"]], "PlatiPy documentation": [[36, "platipy-documentation"]], "PlatiPy": [[36, "platipy"]], "Processing Library and Analysis Toolkit for Medical Imaging in Python": [[36, "processing-library-and-analysis-toolkit-for-medical-imaging-in-python"]], "What can I do with platipy?": [[36, "what-can-i-do-with-platipy"]], "Visualise some contours": [[36, "visualise-some-contours"]], "Register some images": [[36, "register-some-images"]], "Calculate deformation vector fields": [[36, "calculate-deformation-vector-fields"]], "Getting started": [[36, "getting-started"]], "Authors": [[36, "authors"]], "Registration": [[37, "registration"]], "Deformable Image Registration": [[37, "module-platipy.imaging.registration.deformable"]], "Rigid Registration": [[37, "module-platipy.imaging.registration.linear"]], "Registration Utils": [[37, "module-platipy.imaging.registration.utils"]], "Algorithm Deployment Service": [[38, "algorithm-deployment-service"]], "PlatiPy Deployment Service Framework": [[38, "platipy-deployment-service-framework"]], "Prerequisites": [[38, "prerequisites"]], "Developing a service": [[38, "developing-a-service"]], "Implementation": [[38, "implementation"]], "Initialise the database": [[38, "initialise-the-database"]], "Add an API Key": [[38, "add-an-api-key"]], "Run the service": [[38, "run-the-service"]], "Deploying a service": [[38, "id1"]], "Build a docker image": [[38, "build-a-docker-image"]], "Secure using SSL": [[38, "secure-using-ssl"]], "Utilities": [[39, "utilities"]], "Labels": [[39, "module-platipy.imaging.label.utils"]], "Comparison": [[39, "module-platipy.imaging.label.comparison"]], "Cropping": [[39, "module-platipy.imaging.utils.crop"]], "Geometry": [[39, "module-platipy.imaging.utils.geometry"]], "IO": [[39, "module-platipy.imaging.utils.io"]], "Image Visualiser": [[40, "image-visualiser"]]}, "indexentries": {"--config": [[3, "cmdoption-segmentation-c"]], "--dcm": [[3, "cmdoption-nifti_to_series-d"]], "--dcm_file": [[3, "cmdoption-nifti_to_rtstruct-d"]], "--dcm_img": [[3, "cmdoption-rtstruct_to_nifti-i"]], "--dcm_rt_file": [[3, "cmdoption-rtstruct_to_nifti-r"]], "--default": [[3, "cmdoption-segmentation-d"]], "--dose_format": [[3, "cmdoption-dicom_crawler-dose_format"]], "--file_suffix": [[3, "cmdoption-dicom_crawler-file_suffix"]], "--image": [[3, "cmdoption-nifti_to_series-i"]], "--image_format": [[3, "cmdoption-dicom_crawler-image_format"]], "--input_dir": [[3, "cmdoption-dicom_crawler-i"]], "--mask": [[3, "cmdoption-nifti_to_rtstruct-m"]], "--out_rt_filename": [[3, "cmdoption-nifti_to_rtstruct-o"]], "--output": [[3, "cmdoption-segmentation-o"]], "--output_dir": [[3, "cmdoption-dicom_crawler-o"], [3, "cmdoption-rtstruct_to_nifti-od"]], "--output_directory": [[3, "cmdoption-nifti_to_series-o"]], "--output_img": [[3, "cmdoption-rtstruct_to_nifti-oi"]], "--overwrite": [[3, "cmdoption-dicom_crawler-overwrite"]], "--prefix": [[3, "cmdoption-rtstruct_to_nifti-p"]], "--short_description": [[3, "cmdoption-dicom_crawler-s"]], "--sort_by": [[3, "cmdoption-dicom_crawler-b"]], "--spacing": [[3, "cmdoption-rtstruct_to_nifti-spacing"]], "--structure_format": [[3, "cmdoption-dicom_crawler-structure_format"]], "--tag": [[3, "cmdoption-nifti_to_series-t"]], "--verbose": [[3, "cmdoption-dicom_crawler-v"]], "-b": [[3, "cmdoption-dicom_crawler-b"]], "-c": [[3, "cmdoption-segmentation-c"]], "-d": [[3, "cmdoption-nifti_to_rtstruct-d"], [3, "cmdoption-nifti_to_series-d"], [3, "cmdoption-segmentation-d"]], "-i": [[3, "cmdoption-dicom_crawler-i"], [3, "cmdoption-nifti_to_series-i"], [3, "cmdoption-rtstruct_to_nifti-i"]], "-m": [[3, "cmdoption-nifti_to_rtstruct-m"]], "-o": [[3, "cmdoption-dicom_crawler-o"], [3, "cmdoption-nifti_to_rtstruct-o"], [3, "cmdoption-nifti_to_series-o"], [3, "cmdoption-segmentation-o"]], "-od": [[3, "cmdoption-rtstruct_to_nifti-od"]], "-oi": [[3, "cmdoption-rtstruct_to_nifti-oi"]], "-p": [[3, "cmdoption-rtstruct_to_nifti-p"]], "-r": [[3, "cmdoption-rtstruct_to_nifti-r"]], "-s": [[3, "cmdoption-dicom_crawler-s"]], "-t": [[3, "cmdoption-nifti_to_series-t"]], "-v": [[3, "cmdoption-dicom_crawler-v"]], "algorithm": [[3, "cmdoption-segmentation-arg-ALGORITHM"]], "input_path": [[3, "cmdoption-segmentation-arg-INPUT_PATH"]], "dicom_crawler command line option": [[3, "cmdoption-dicom_crawler-b"], [3, "cmdoption-dicom_crawler-dose_format"], [3, "cmdoption-dicom_crawler-file_suffix"], [3, "cmdoption-dicom_crawler-i"], [3, "cmdoption-dicom_crawler-image_format"], [3, "cmdoption-dicom_crawler-o"], [3, "cmdoption-dicom_crawler-overwrite"], [3, "cmdoption-dicom_crawler-s"], [3, "cmdoption-dicom_crawler-structure_format"], [3, "cmdoption-dicom_crawler-v"]], "nifti_to_rtstruct command line option": [[3, "cmdoption-nifti_to_rtstruct-d"], [3, "cmdoption-nifti_to_rtstruct-m"], [3, "cmdoption-nifti_to_rtstruct-o"]], "nifti_to_series command line option": [[3, "cmdoption-nifti_to_series-d"], [3, "cmdoption-nifti_to_series-i"], [3, "cmdoption-nifti_to_series-o"], [3, "cmdoption-nifti_to_series-t"]], "rtstruct_to_nifti command line option": [[3, "cmdoption-rtstruct_to_nifti-i"], [3, "cmdoption-rtstruct_to_nifti-od"], [3, "cmdoption-rtstruct_to_nifti-oi"], [3, "cmdoption-rtstruct_to_nifti-p"], [3, "cmdoption-rtstruct_to_nifti-r"], [3, "cmdoption-rtstruct_to_nifti-spacing"]], "segmentation command line option": [[3, "cmdoption-segmentation-arg-ALGORITHM"], [3, "cmdoption-segmentation-arg-INPUT_PATH"], [3, "cmdoption-segmentation-c"], [3, "cmdoption-segmentation-d"], [3, "cmdoption-segmentation-o"]], "convert_nifti() (in module platipy.dicom.io.nifti_to_rtstruct)": [[5, "platipy.dicom.io.nifti_to_rtstruct.convert_nifti"], [17, "platipy.dicom.io.nifti_to_rtstruct.convert_nifti"]], "convert_rtdose() (in module platipy.dicom.io.rtdose_to_nifti)": [[5, "platipy.dicom.io.rtdose_to_nifti.convert_rtdose"]], "convert_rtstruct() (in module platipy.dicom.io.rtstruct_to_nifti)": [[5, "platipy.dicom.io.rtstruct_to_nifti.convert_rtstruct"], [17, "platipy.dicom.io.rtstruct_to_nifti.convert_rtstruct"]], "fix_missing_data() (in module platipy.dicom.io.rtstruct_to_nifti)": [[5, "platipy.dicom.io.rtstruct_to_nifti.fix_missing_data"], [17, "platipy.dicom.io.rtstruct_to_nifti.fix_missing_data"]], "module": [[5, "module-platipy.dicom.io.nifti_to_rtstruct"], [5, "module-platipy.dicom.io.rtdose_to_nifti"], [5, "module-platipy.dicom.io.rtstruct_to_nifti"], [6, "module-platipy.imaging.dose.dvh"], [9, "module-platipy"], [10, "module-platipy.backend"], [10, "module-platipy.backend.api"], [10, "module-platipy.backend.application"], [10, "module-platipy.backend.manage"], [10, "module-platipy.backend.models"], [10, "module-platipy.backend.tasks"], [10, "module-platipy.backend.views"], [11, "module-platipy.backend.sample"], [11, "module-platipy.backend.sample.sample"], [12, "module-platipy.cli"], [12, "module-platipy.cli.dicom_crawler"], [12, "module-platipy.cli.nifti_to_rtstruct"], [12, "module-platipy.cli.nifti_to_series"], [12, "module-platipy.cli.rtstruct_to_nifti"], [12, "module-platipy.cli.run"], [12, "module-platipy.cli.segmentation"], [12, "module-platipy.cli.tcia_download"], [13, "module-platipy.dicom"], [14, "module-platipy.dicom.communication"], [14, "module-platipy.dicom.communication.connector"], [16, "module-platipy.dicom.download"], [16, "module-platipy.dicom.download.tcia"], [17, "module-platipy.dicom.io"], [17, "module-platipy.dicom.io.crawl"], [17, "module-platipy.dicom.io.nifti_to_rtstruct"], [17, "module-platipy.dicom.io.nifti_to_series"], [17, "module-platipy.dicom.io.rtstruct_to_nifti"], [21, "module-platipy.dicom.tests"], [21, "module-platipy.dicom.tests.test_convert"], [22, "module-platipy.imaging"], [26, "module-platipy.imaging.generation"], [26, "module-platipy.imaging.generation.augment"], [26, "module-platipy.imaging.generation.dvf"], [26, "module-platipy.imaging.generation.image"], [26, "module-platipy.imaging.generation.mask"], [27, "module-platipy.imaging.label"], [27, "module-platipy.imaging.label.comparison"], [27, "module-platipy.imaging.label.fusion"], [27, "module-platipy.imaging.label.iar"], [27, "module-platipy.imaging.label.projection"], [27, "module-platipy.imaging.label.utils"], [28, "module-platipy.imaging.projects"], [29, "module-platipy.imaging.projects.bronchus"], [29, "module-platipy.imaging.projects.bronchus.bronchus"], [29, "module-platipy.imaging.projects.bronchus.run"], [30, "module-platipy.imaging.projects.cardiac"], [30, "module-platipy.imaging.projects.cardiac.run"], [30, "module-platipy.imaging.projects.cardiac.service"], [31, "module-platipy.imaging.registration"], [31, "module-platipy.imaging.registration.deformable"], [31, "module-platipy.imaging.registration.linear"], [31, "module-platipy.imaging.registration.utils"], [32, "module-platipy.imaging.tests"], [32, "module-platipy.imaging.tests.data"], [32, "module-platipy.imaging.tests.test_bronchus"], [32, "module-platipy.imaging.tests.test_cardiac"], [32, "module-platipy.imaging.tests.test_visualiser"], [33, "module-platipy.imaging.utils"], [33, "module-platipy.imaging.utils.crop"], [33, "module-platipy.imaging.utils.lung"], [33, "module-platipy.imaging.utils.valve"], [33, "module-platipy.imaging.utils.vessel"], [34, "module-platipy.imaging.visualisation"], [34, "module-platipy.imaging.visualisation.utils"], [34, "module-platipy.imaging.visualisation.visualiser"], [37, "module-platipy.imaging.registration.deformable"], [37, "module-platipy.imaging.registration.linear"], [37, "module-platipy.imaging.registration.utils"], [39, "module-platipy.imaging.label.comparison"], [39, "module-platipy.imaging.label.utils"], [39, "module-platipy.imaging.utils.crop"], [39, "module-platipy.imaging.utils.geometry"], [39, "module-platipy.imaging.utils.io"]], "platipy.dicom.io.nifti_to_rtstruct": [[5, "module-platipy.dicom.io.nifti_to_rtstruct"], [17, "module-platipy.dicom.io.nifti_to_rtstruct"]], "platipy.dicom.io.rtdose_to_nifti": [[5, "module-platipy.dicom.io.rtdose_to_nifti"]], "platipy.dicom.io.rtstruct_to_nifti": [[5, "module-platipy.dicom.io.rtstruct_to_nifti"], [17, "module-platipy.dicom.io.rtstruct_to_nifti"]], "read_dicom_image() (in module platipy.dicom.io.rtstruct_to_nifti)": [[5, "platipy.dicom.io.rtstruct_to_nifti.read_dicom_image"], [17, "platipy.dicom.io.rtstruct_to_nifti.read_dicom_image"]], "read_dicom_struct_file() (in module platipy.dicom.io.rtstruct_to_nifti)": [[5, "platipy.dicom.io.rtstruct_to_nifti.read_dicom_struct_file"], [17, "platipy.dicom.io.rtstruct_to_nifti.read_dicom_struct_file"]], "transform_point_set_from_dicom_struct() (in module platipy.dicom.io.rtstruct_to_nifti)": [[5, "platipy.dicom.io.rtstruct_to_nifti.transform_point_set_from_dicom_struct"], [17, "platipy.dicom.io.rtstruct_to_nifti.transform_point_set_from_dicom_struct"]], "calculate_d_cc_x() (in module platipy.imaging.dose.dvh)": [[6, "platipy.imaging.dose.dvh.calculate_d_cc_x"]], "calculate_d_x() (in module platipy.imaging.dose.dvh)": [[6, "platipy.imaging.dose.dvh.calculate_d_x"]], "calculate_dvh() (in module platipy.imaging.dose.dvh)": [[6, "platipy.imaging.dose.dvh.calculate_dvh"]], "calculate_dvh_for_labels() (in module platipy.imaging.dose.dvh)": [[6, "platipy.imaging.dose.dvh.calculate_dvh_for_labels"]], "calculate_v_x() (in module platipy.imaging.dose.dvh)": [[6, "platipy.imaging.dose.dvh.calculate_v_x"]], "platipy.imaging.dose.dvh": [[6, "module-platipy.imaging.dose.dvh"]], "platipy": [[9, "module-platipy"]], "apikey (class in platipy.backend.models)": [[10, "platipy.backend.models.APIKey"]], "alchemyencoder (class in platipy.backend.models)": [[10, "platipy.backend.models.AlchemyEncoder"]], "algorithm (class in platipy.backend.application)": [[10, "platipy.backend.application.Algorithm"]], "algorithmendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.AlgorithmEndpoint"]], "customconfig (class in platipy.backend.api)": [[10, "platipy.backend.api.CustomConfig"]], "dataobject (class in platipy.backend.models)": [[10, "platipy.backend.models.DataObject"]], "dataobjectdownloadendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.DataObjectDownloadEndpoint"]], "dataobjectendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.DataObjectEndpoint"]], "dataobjectsendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.DataObjectsEndpoint"]], "dataset (class in platipy.backend.models)": [[10, "platipy.backend.models.Dataset"]], "datasetendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.DatasetEndpoint"]], "datasetreadyendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.DatasetReadyEndpoint"]], "datasetsendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.DatasetsEndpoint"]], "dicomlocation (class in platipy.backend.models)": [[10, "platipy.backend.models.DicomLocation"]], "dicomlocationendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.DicomLocationEndpoint"]], "flask_debug": [[10, "index-0"]], "flaskapp (class in platipy.backend.application)": [[10, "platipy.backend.application.FlaskApp"]], "restful_json (platipy.backend.api.customconfig attribute)": [[10, "platipy.backend.api.CustomConfig.RESTFUL_JSON"]], "resource (class in platipy.backend.api)": [[10, "platipy.backend.api.Resource"]], "taskstatus (class in platipy.backend.api)": [[10, "platipy.backend.api.TaskStatus"]], "triggerendpoint (class in platipy.backend.api)": [[10, "platipy.backend.api.TriggerEndpoint"]], "add_api_key() (in module platipy.backend.manage)": [[10, "platipy.backend.manage.add_api_key"]], "add_endpoint() (in module platipy.backend.views)": [[10, "platipy.backend.views.add_endpoint"]], "ae_title (platipy.backend.models.dicomlocation attribute)": [[10, "platipy.backend.models.DicomLocation.ae_title"]], "algorithms (platipy.backend.application.flaskapp attribute)": [[10, "platipy.backend.application.FlaskApp.algorithms"]], "api (platipy.backend.application.flaskapp attribute)": [[10, "platipy.backend.application.FlaskApp.api"]], "authenticate() (in module platipy.backend.api)": [[10, "platipy.backend.api.authenticate"]], "beat_started (platipy.backend.application.flaskapp attribute)": [[10, "platipy.backend.application.FlaskApp.beat_started"]], "celery_started (platipy.backend.application.flaskapp attribute)": [[10, "platipy.backend.application.FlaskApp.celery_started"]], "children (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.children"]], "configure_logging() (in module platipy.backend)": [[10, "platipy.backend.configure_logging"]], "create_db() (in module platipy.backend.manage)": [[10, "platipy.backend.manage.create_db"]], "dashboard() (in module platipy.backend.views)": [[10, "platipy.backend.views.dashboard"]], "dataset (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.dataset"]], "dataset_id (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.dataset_id"]], "default() (platipy.backend.models.alchemyencoder method)": [[10, "platipy.backend.models.AlchemyEncoder.default"]], "default_timeout() (in module platipy.backend.models)": [[10, "platipy.backend.models.default_timeout"]], "delete() (platipy.backend.api.dataobjectendpoint method)": [[10, "platipy.backend.api.DataObjectEndpoint.delete"]], "dicom_listener_aetitle (platipy.backend.application.flaskapp attribute)": [[10, "platipy.backend.application.FlaskApp.dicom_listener_aetitle"]], "dicom_listener_port (platipy.backend.application.flaskapp attribute)": [[10, "platipy.backend.application.FlaskApp.dicom_listener_port"]], "endpoint (platipy.backend.api.algorithmendpoint attribute)": [[10, "platipy.backend.api.AlgorithmEndpoint.endpoint"]], "endpoint (platipy.backend.api.dataobjectdownloadendpoint attribute)": [[10, "platipy.backend.api.DataObjectDownloadEndpoint.endpoint"]], "endpoint (platipy.backend.api.dataobjectendpoint attribute)": [[10, "platipy.backend.api.DataObjectEndpoint.endpoint"]], "endpoint (platipy.backend.api.dataobjectsendpoint attribute)": [[10, "platipy.backend.api.DataObjectsEndpoint.endpoint"]], "endpoint (platipy.backend.api.datasetendpoint attribute)": [[10, "platipy.backend.api.DatasetEndpoint.endpoint"]], "endpoint (platipy.backend.api.datasetreadyendpoint attribute)": [[10, "platipy.backend.api.DatasetReadyEndpoint.endpoint"]], "endpoint (platipy.backend.api.datasetsendpoint attribute)": [[10, "platipy.backend.api.DatasetsEndpoint.endpoint"]], "endpoint (platipy.backend.api.dicomlocationendpoint attribute)": [[10, "platipy.backend.api.DicomLocationEndpoint.endpoint"]], "endpoint (platipy.backend.api.taskstatus attribute)": [[10, "platipy.backend.api.TaskStatus.endpoint"]], "endpoint (platipy.backend.api.triggerendpoint attribute)": [[10, "platipy.backend.api.TriggerEndpoint.endpoint"]], "environment variable": [[10, "index-0"]], "fetch_log() (in module platipy.backend.views)": [[10, "platipy.backend.views.fetch_log"]], "fetch_status() (in module platipy.backend.views)": [[10, "platipy.backend.views.fetch_status"]], "from_dicom_location (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.from_dicom_location"]], "from_dicom_location_id (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.from_dicom_location_id"]], "get() (platipy.backend.api.algorithmendpoint method)": [[10, "platipy.backend.api.AlgorithmEndpoint.get"]], "get() (platipy.backend.api.dataobjectdownloadendpoint method)": [[10, "platipy.backend.api.DataObjectDownloadEndpoint.get"]], "get() (platipy.backend.api.dataobjectendpoint method)": [[10, "platipy.backend.api.DataObjectEndpoint.get"]], "get() (platipy.backend.api.dataobjectsendpoint method)": [[10, "platipy.backend.api.DataObjectsEndpoint.get"]], "get() (platipy.backend.api.datasetendpoint method)": [[10, "platipy.backend.api.DatasetEndpoint.get"]], "get() (platipy.backend.api.datasetreadyendpoint method)": [[10, "platipy.backend.api.DatasetReadyEndpoint.get"]], "get() (platipy.backend.api.datasetsendpoint method)": [[10, "platipy.backend.api.DatasetsEndpoint.get"]], "get() (platipy.backend.api.dicomlocationendpoint method)": [[10, "platipy.backend.api.DicomLocationEndpoint.get"]], "get() (platipy.backend.api.taskstatus method)": [[10, "platipy.backend.api.TaskStatus.get"]], "host (platipy.backend.models.dicomlocation attribute)": [[10, "platipy.backend.models.DicomLocation.host"]], "id (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.id"]], "id (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.id"]], "id (platipy.backend.models.dicomlocation attribute)": [[10, "platipy.backend.models.DicomLocation.id"]], "input_data_objects (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.input_data_objects"]], "is_admin (platipy.backend.models.apikey attribute)": [[10, "platipy.backend.models.APIKey.is_admin"]], "is_fetched (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.is_fetched"]], "is_input (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.is_input"]], "is_sent (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.is_sent"]], "key (platipy.backend.models.apikey attribute)": [[10, "platipy.backend.models.APIKey.key"]], "mediatypes() (platipy.backend.api.algorithmendpoint method)": [[10, "platipy.backend.api.AlgorithmEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.dataobjectdownloadendpoint method)": [[10, "platipy.backend.api.DataObjectDownloadEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.dataobjectendpoint method)": [[10, "platipy.backend.api.DataObjectEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.dataobjectsendpoint method)": [[10, "platipy.backend.api.DataObjectsEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.datasetendpoint method)": [[10, "platipy.backend.api.DatasetEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.datasetreadyendpoint method)": [[10, "platipy.backend.api.DatasetReadyEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.datasetsendpoint method)": [[10, "platipy.backend.api.DatasetsEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.dicomlocationendpoint method)": [[10, "platipy.backend.api.DicomLocationEndpoint.mediatypes"]], "mediatypes() (platipy.backend.api.taskstatus method)": [[10, "platipy.backend.api.TaskStatus.mediatypes"]], "mediatypes() (platipy.backend.api.triggerendpoint method)": [[10, "platipy.backend.api.TriggerEndpoint.mediatypes"]], "meta_data (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.meta_data"]], "method_decorators (platipy.backend.api.resource attribute)": [[10, "platipy.backend.api.Resource.method_decorators"]], "methods (platipy.backend.api.algorithmendpoint attribute)": [[10, "platipy.backend.api.AlgorithmEndpoint.methods"]], "methods (platipy.backend.api.dataobjectdownloadendpoint attribute)": [[10, "platipy.backend.api.DataObjectDownloadEndpoint.methods"]], "methods (platipy.backend.api.dataobjectendpoint attribute)": [[10, "platipy.backend.api.DataObjectEndpoint.methods"]], "methods (platipy.backend.api.dataobjectsendpoint attribute)": [[10, "platipy.backend.api.DataObjectsEndpoint.methods"]], "methods (platipy.backend.api.datasetendpoint attribute)": [[10, "platipy.backend.api.DatasetEndpoint.methods"]], "methods (platipy.backend.api.datasetreadyendpoint attribute)": [[10, "platipy.backend.api.DatasetReadyEndpoint.methods"]], "methods (platipy.backend.api.datasetsendpoint attribute)": [[10, "platipy.backend.api.DatasetsEndpoint.methods"]], "methods (platipy.backend.api.dicomlocationendpoint attribute)": [[10, "platipy.backend.api.DicomLocationEndpoint.methods"]], "methods (platipy.backend.api.taskstatus attribute)": [[10, "platipy.backend.api.TaskStatus.methods"]], "methods (platipy.backend.api.triggerendpoint attribute)": [[10, "platipy.backend.api.TriggerEndpoint.methods"]], "name (platipy.backend.models.apikey attribute)": [[10, "platipy.backend.models.APIKey.name"]], "name (platipy.backend.models.dicomlocation attribute)": [[10, "platipy.backend.models.DicomLocation.name"]], "on_celery_setup_logging() (in module platipy.backend)": [[10, "platipy.backend.on_celery_setup_logging"]], "output_data_objects (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.output_data_objects"]], "owner_key (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.owner_key"]], "owner_key (platipy.backend.models.dicomlocation attribute)": [[10, "platipy.backend.models.DicomLocation.owner_key"]], "parent (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.parent"]], "parent_id (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.parent_id"]], "parser (platipy.backend.api.dataobjectdownloadendpoint attribute)": [[10, "platipy.backend.api.DataObjectDownloadEndpoint.parser"]], "parser (platipy.backend.api.dataobjectendpoint attribute)": [[10, "platipy.backend.api.DataObjectEndpoint.parser"]], "parser (platipy.backend.api.datasetendpoint attribute)": [[10, "platipy.backend.api.DatasetEndpoint.parser"]], "parser (platipy.backend.api.datasetreadyendpoint attribute)": [[10, "platipy.backend.api.DatasetReadyEndpoint.parser"]], "parser (platipy.backend.api.dicomlocationendpoint attribute)": [[10, "platipy.backend.api.DicomLocationEndpoint.parser"]], "parser (platipy.backend.api.triggerendpoint attribute)": [[10, "platipy.backend.api.TriggerEndpoint.parser"]], "path (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.path"]], "platipy.backend": [[10, "module-platipy.backend"]], "platipy.backend.api": [[10, "module-platipy.backend.api"]], "platipy.backend.application": [[10, "module-platipy.backend.application"]], "platipy.backend.manage": [[10, "module-platipy.backend.manage"]], "platipy.backend.models": [[10, "module-platipy.backend.models"]], "platipy.backend.tasks": [[10, "module-platipy.backend.tasks"]], "platipy.backend.views": [[10, "module-platipy.backend.views"]], "port (platipy.backend.models.dicomlocation attribute)": [[10, "platipy.backend.models.DicomLocation.port"]], "post() (platipy.backend.api.dataobjectendpoint method)": [[10, "platipy.backend.api.DataObjectEndpoint.post"]], "post() (platipy.backend.api.datasetendpoint method)": [[10, "platipy.backend.api.DatasetEndpoint.post"]], "post() (platipy.backend.api.dicomlocationendpoint method)": [[10, "platipy.backend.api.DicomLocationEndpoint.post"]], "post() (platipy.backend.api.triggerendpoint method)": [[10, "platipy.backend.api.TriggerEndpoint.post"]], "register() (platipy.backend.application.flaskapp method)": [[10, "platipy.backend.application.FlaskApp.register"]], "run() (platipy.backend.application.flaskapp method)": [[10, "platipy.backend.application.FlaskApp.run"]], "run_celery() (in module platipy.backend.manage)": [[10, "platipy.backend.manage.run_celery"]], "run_dicom_listener() (platipy.backend.application.flaskapp method)": [[10, "platipy.backend.application.FlaskApp.run_dicom_listener"]], "series_instance_uid (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.series_instance_uid"]], "settings_to_json() (platipy.backend.application.algorithm method)": [[10, "platipy.backend.application.Algorithm.settings_to_json"]], "status (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.status"]], "timeout (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.timeout"]], "timestamp (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.timestamp"]], "timestamp (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.timestamp"]], "to_dicom_location (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.to_dicom_location"]], "to_dicom_location_id (platipy.backend.models.dataset attribute)": [[10, "platipy.backend.models.Dataset.to_dicom_location_id"]], "type (platipy.backend.models.dataobject attribute)": [[10, "platipy.backend.models.DataObject.type"]], "view_endpoint() (in module platipy.backend.views)": [[10, "platipy.backend.views.view_endpoint"]], "platipy.backend.sample": [[11, "module-platipy.backend.sample"]], "platipy.backend.sample.sample": [[11, "module-platipy.backend.sample.sample"]], "primitive_body_segmentation() (in module platipy.backend.sample.sample)": [[11, "platipy.backend.sample.sample.primitive_body_segmentation"]], "platipy.cli": [[12, "module-platipy.cli"]], "platipy.cli.dicom_crawler": [[12, "module-platipy.cli.dicom_crawler"]], "platipy.cli.nifti_to_rtstruct": [[12, "module-platipy.cli.nifti_to_rtstruct"]], "platipy.cli.nifti_to_series": [[12, "module-platipy.cli.nifti_to_series"]], "platipy.cli.rtstruct_to_nifti": [[12, "module-platipy.cli.rtstruct_to_nifti"]], "platipy.cli.run": [[12, "module-platipy.cli.run"]], "platipy.cli.segmentation": [[12, "module-platipy.cli.segmentation"]], "platipy.cli.tcia_download": [[12, "module-platipy.cli.tcia_download"]], "platipy_cli() (in module platipy.cli.run)": [[12, "platipy.cli.run.platipy_cli"]], "platipy.dicom": [[13, "module-platipy.dicom"]], "dicomconnector (class in platipy.dicom.communication.connector)": [[14, "platipy.dicom.communication.connector.DicomConnector"]], "do_find() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.do_find"]], "download_series() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.download_series"]], "get_series_for_study() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.get_series_for_study"]], "get_studies_for_patient() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.get_studies_for_patient"]], "listen() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.listen"]], "move_series() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.move_series"]], "on_association_accepted() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.on_association_accepted"]], "on_association_released() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.on_association_released"]], "on_c_echo() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.on_c_echo"]], "on_c_store() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.on_c_store"]], "platipy.dicom.communication": [[14, "module-platipy.dicom.communication"]], "platipy.dicom.communication.connector": [[14, "module-platipy.dicom.communication.connector"]], "send_dcm() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.send_dcm"]], "verify() (platipy.dicom.communication.connector.dicomconnector method)": [[14, "platipy.dicom.communication.connector.DicomConnector.verify"]], "fetch_data() (in module platipy.dicom.download.tcia)": [[16, "platipy.dicom.download.tcia.fetch_data"]], "get_collections() (in module platipy.dicom.download.tcia)": [[16, "platipy.dicom.download.tcia.get_collections"]], "get_hn_data() (in module platipy.dicom.download.tcia)": [[16, "platipy.dicom.download.tcia.get_hn_data"]], "get_lung_data() (in module platipy.dicom.download.tcia)": [[16, "platipy.dicom.download.tcia.get_lung_data"]], "get_modalities_in_collection() (in module platipy.dicom.download.tcia)": [[16, "platipy.dicom.download.tcia.get_modalities_in_collection"]], "get_patients_in_collection() (in module platipy.dicom.download.tcia)": [[16, "platipy.dicom.download.tcia.get_patients_in_collection"]], "platipy.dicom.download": [[16, "module-platipy.dicom.download"]], "platipy.dicom.download.tcia": [[16, "module-platipy.dicom.download.tcia"]], "convert_nifti_to_dicom_series() (in module platipy.dicom.io.nifti_to_series)": [[17, "platipy.dicom.io.nifti_to_series.convert_nifti_to_dicom_series"]], "fix_missing_data() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.fix_missing_data"]], "flatten() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.flatten"]], "get_dicom_info_from_description() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.get_dicom_info_from_description"]], "get_suv_bw_scale_factor() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.get_suv_bw_scale_factor"]], "platipy.dicom.io": [[17, "module-platipy.dicom.io"]], "platipy.dicom.io.crawl": [[17, "module-platipy.dicom.io.crawl"]], "platipy.dicom.io.nifti_to_series": [[17, "module-platipy.dicom.io.nifti_to_series"]], "process_dicom_directory() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.process_dicom_directory"]], "process_dicom_file_list() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.process_dicom_file_list"]], "process_dicom_series() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.process_dicom_series"]], "safe_sort_dicom_image_list() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.safe_sort_dicom_image_list"]], "transform_point_set_from_dicom_struct() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.transform_point_set_from_dicom_struct"]], "write_output_data_to_disk() (in module platipy.dicom.io.crawl)": [[17, "platipy.dicom.io.crawl.write_output_data_to_disk"]], "dicom_data() (in module platipy.dicom.tests.test_convert)": [[21, "platipy.dicom.tests.test_convert.dicom_data"]], "nifti_data() (in module platipy.dicom.tests.test_convert)": [[21, "platipy.dicom.tests.test_convert.nifti_data"]], "platipy.dicom.tests": [[21, "module-platipy.dicom.tests"]], "platipy.dicom.tests.test_convert": [[21, "module-platipy.dicom.tests.test_convert"]], "test_convert_dicom_to_nifti() (in module platipy.dicom.tests.test_convert)": [[21, "platipy.dicom.tests.test_convert.test_convert_dicom_to_nifti"]], "test_convert_nifti_to_dicom() (in module platipy.dicom.tests.test_convert)": [[21, "platipy.dicom.tests.test_convert.test_convert_nifti_to_dicom"]], "platipy.imaging": [[22, "module-platipy.imaging"]], "contractaugment (class in platipy.imaging.generation.augment)": [[26, "platipy.imaging.generation.augment.ContractAugment"]], "deformableaugment (class in platipy.imaging.generation.augment)": [[26, "platipy.imaging.generation.augment.DeformableAugment"]], "expandaugment (class in platipy.imaging.generation.augment)": [[26, "platipy.imaging.generation.augment.ExpandAugment"]], "shiftaugment (class in platipy.imaging.generation.augment)": [[26, "platipy.imaging.generation.augment.ShiftAugment"]], "apply_augmentation() (in module platipy.imaging.generation.augment)": [[26, "platipy.imaging.generation.augment.apply_augmentation"]], "augment() (platipy.imaging.generation.augment.contractaugment method)": [[26, "platipy.imaging.generation.augment.ContractAugment.augment"]], "augment() (platipy.imaging.generation.augment.deformableaugment method)": [[26, "platipy.imaging.generation.augment.DeformableAugment.augment"]], "augment() (platipy.imaging.generation.augment.expandaugment method)": [[26, "platipy.imaging.generation.augment.ExpandAugment.augment"]], "augment() (platipy.imaging.generation.augment.shiftaugment method)": [[26, "platipy.imaging.generation.augment.ShiftAugment.augment"]], "extend_mask() (in module platipy.imaging.generation.mask)": [[26, "platipy.imaging.generation.mask.extend_mask"]], "generate_field_asymmetric_contract() (in module platipy.imaging.generation.dvf)": [[26, "platipy.imaging.generation.dvf.generate_field_asymmetric_contract"]], "generate_field_asymmetric_extend() (in module platipy.imaging.generation.dvf)": [[26, "platipy.imaging.generation.dvf.generate_field_asymmetric_extend"]], "generate_field_expand() (in module platipy.imaging.generation.dvf)": [[26, "platipy.imaging.generation.dvf.generate_field_expand"]], "generate_field_radial_bend() (in module platipy.imaging.generation.dvf)": [[26, "platipy.imaging.generation.dvf.generate_field_radial_bend"]], "generate_field_shift() (in module platipy.imaging.generation.dvf)": [[26, "platipy.imaging.generation.dvf.generate_field_shift"]], "generate_random_augmentation() (in module platipy.imaging.generation.augment)": [[26, "platipy.imaging.generation.augment.generate_random_augmentation"]], "get_bone_mask() (in module platipy.imaging.generation.mask)": [[26, "platipy.imaging.generation.mask.get_bone_mask"]], "get_external_mask() (in module platipy.imaging.generation.mask)": [[26, "platipy.imaging.generation.mask.get_external_mask"]], "insert_cylinder() (in module platipy.imaging.generation.image)": [[26, "platipy.imaging.generation.image.insert_cylinder"]], "insert_cylinder_image() (in module platipy.imaging.generation.image)": [[26, "platipy.imaging.generation.image.insert_cylinder_image"]], "insert_sphere() (in module platipy.imaging.generation.image)": [[26, "platipy.imaging.generation.image.insert_sphere"]], "insert_sphere_image() (in module platipy.imaging.generation.image)": [[26, "platipy.imaging.generation.image.insert_sphere_image"]], "platipy.imaging.generation": [[26, "module-platipy.imaging.generation"]], "platipy.imaging.generation.augment": [[26, "module-platipy.imaging.generation.augment"]], "platipy.imaging.generation.dvf": [[26, "module-platipy.imaging.generation.dvf"]], "platipy.imaging.generation.image": [[26, "module-platipy.imaging.generation.image"]], "platipy.imaging.generation.mask": [[26, "module-platipy.imaging.generation.mask"]], "binary_decode_image() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.binary_decode_image"], [39, "platipy.imaging.label.utils.binary_decode_image"]], "binary_encode_structure_list() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.binary_encode_structure_list"], [39, "platipy.imaging.label.utils.binary_encode_structure_list"]], "combine_labels() (in module platipy.imaging.label.fusion)": [[27, "platipy.imaging.label.fusion.combine_labels"]], "combine_labels_staple() (in module platipy.imaging.label.fusion)": [[27, "platipy.imaging.label.fusion.combine_labels_staple"]], "compute_apl() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_apl"], [39, "platipy.imaging.label.comparison.compute_apl"]], "compute_metric_dsc() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_metric_dsc"], [39, "platipy.imaging.label.comparison.compute_metric_dsc"]], "compute_metric_hd() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_metric_hd"], [39, "platipy.imaging.label.comparison.compute_metric_hd"]], "compute_metric_masd() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_metric_masd"], [39, "platipy.imaging.label.comparison.compute_metric_masd"]], "compute_metric_mean_apl() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_metric_mean_apl"], [39, "platipy.imaging.label.comparison.compute_metric_mean_apl"]], "compute_metric_sensitivity() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_metric_sensitivity"], [39, "platipy.imaging.label.comparison.compute_metric_sensitivity"]], "compute_metric_specificity() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_metric_specificity"], [39, "platipy.imaging.label.comparison.compute_metric_specificity"]], "compute_metric_total_apl() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_metric_total_apl"], [39, "platipy.imaging.label.comparison.compute_metric_total_apl"]], "compute_surface_dsc() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_surface_dsc"], [39, "platipy.imaging.label.comparison.compute_surface_dsc"]], "compute_surface_metrics() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_surface_metrics"], [39, "platipy.imaging.label.comparison.compute_surface_metrics"]], "compute_volume() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_volume"], [39, "platipy.imaging.label.comparison.compute_volume"]], "compute_volume_metrics() (in module platipy.imaging.label.comparison)": [[27, "platipy.imaging.label.comparison.compute_volume_metrics"], [39, "platipy.imaging.label.comparison.compute_volume_metrics"]], "compute_weight_map() (in module platipy.imaging.label.fusion)": [[27, "platipy.imaging.label.fusion.compute_weight_map"]], "correct_volume_overlap() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.correct_volume_overlap"], [39, "platipy.imaging.label.utils.correct_volume_overlap"]], "evaluate_distance_on_surface() (in module platipy.imaging.label.projection)": [[27, "platipy.imaging.label.projection.evaluate_distance_on_surface"]], "evaluate_distance_to_reference() (in module platipy.imaging.label.projection)": [[27, "platipy.imaging.label.projection.evaluate_distance_to_reference"]], "gaussian_curve() (in module platipy.imaging.label.iar)": [[27, "platipy.imaging.label.iar.gaussian_curve"]], "generate_primes() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.generate_primes"], [39, "platipy.imaging.label.utils.generate_primes"]], "get_com() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.get_com"], [39, "platipy.imaging.label.utils.get_com"]], "median_absolute_deviation() (in module platipy.imaging.label.iar)": [[27, "platipy.imaging.label.iar.median_absolute_deviation"]], "mutual_information() (in module platipy.imaging.label.fusion)": [[27, "platipy.imaging.label.fusion.mutual_information"]], "platipy.imaging.label": [[27, "module-platipy.imaging.label"]], "platipy.imaging.label.comparison": [[27, "module-platipy.imaging.label.comparison"], [39, "module-platipy.imaging.label.comparison"]], "platipy.imaging.label.fusion": [[27, "module-platipy.imaging.label.fusion"]], "platipy.imaging.label.iar": [[27, "module-platipy.imaging.label.iar"]], "platipy.imaging.label.projection": [[27, "module-platipy.imaging.label.projection"]], "platipy.imaging.label.utils": [[27, "module-platipy.imaging.label.utils"], [39, "module-platipy.imaging.label.utils"]], "prime_decode_image() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.prime_decode_image"], [39, "platipy.imaging.label.utils.prime_decode_image"]], "prime_encode_structure_list() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.prime_encode_structure_list"], [39, "platipy.imaging.label.utils.prime_encode_structure_list"]], "process_probability_image() (in module platipy.imaging.label.fusion)": [[27, "platipy.imaging.label.fusion.process_probability_image"]], "regrid_spherical_data() (in module platipy.imaging.label.projection)": [[27, "platipy.imaging.label.projection.regrid_spherical_data"]], "run_iar() (in module platipy.imaging.label.iar)": [[27, "platipy.imaging.label.iar.run_iar"]], "vectorised_transform_index_to_physical_point() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.vectorised_transform_index_to_physical_point"], [39, "platipy.imaging.label.utils.vectorised_transform_index_to_physical_point"]], "vectorised_transform_physical_point_to_index() (in module platipy.imaging.label.utils)": [[27, "platipy.imaging.label.utils.vectorised_transform_physical_point_to_index"], [39, "platipy.imaging.label.utils.vectorised_transform_physical_point_to_index"]], "platipy.imaging.projects": [[28, "module-platipy.imaging.projects"]], "fast_mask() (in module platipy.imaging.projects.bronchus.bronchus)": [[29, "platipy.imaging.projects.bronchus.bronchus.fast_mask"]], "generate_airway_mask() (in module platipy.imaging.projects.bronchus.bronchus)": [[29, "platipy.imaging.projects.bronchus.bronchus.generate_airway_mask"]], "generate_lung_mask() (in module platipy.imaging.projects.bronchus.bronchus)": [[29, "platipy.imaging.projects.bronchus.bronchus.generate_lung_mask"]], "get_distance() (in module platipy.imaging.projects.bronchus.bronchus)": [[29, "platipy.imaging.projects.bronchus.bronchus.get_distance"]], "platipy.imaging.projects.bronchus": [[29, "module-platipy.imaging.projects.bronchus"]], "platipy.imaging.projects.bronchus.bronchus": [[29, "module-platipy.imaging.projects.bronchus.bronchus"]], "platipy.imaging.projects.bronchus.run": [[29, "module-platipy.imaging.projects.bronchus.run"]], "run_bronchus_segmentation() (in module platipy.imaging.projects.bronchus.run)": [[29, "platipy.imaging.projects.bronchus.run.run_bronchus_segmentation"]], "cardiac_service() (in module platipy.imaging.projects.cardiac.service)": [[30, "platipy.imaging.projects.cardiac.service.cardiac_service"]], "cardiac_structure_guided_service() (in module platipy.imaging.projects.cardiac.service)": [[30, "platipy.imaging.projects.cardiac.service.cardiac_structure_guided_service"]], "display_open_cardiac_zip_url_locations() (in module platipy.imaging.projects.cardiac.run)": [[30, "platipy.imaging.projects.cardiac.run.display_open_cardiac_zip_url_locations"]], "install_atlas_from_zipfile() (in module platipy.imaging.projects.cardiac.run)": [[30, "platipy.imaging.projects.cardiac.run.install_atlas_from_zipfile"]], "install_hybrid_cardiac_from_zip() (in module platipy.imaging.projects.cardiac.run)": [[30, "platipy.imaging.projects.cardiac.run.install_hybrid_cardiac_from_zip"]], "install_open_atlas() (in module platipy.imaging.projects.cardiac.run)": [[30, "platipy.imaging.projects.cardiac.run.install_open_atlas"]], "platipy.imaging.projects.cardiac": [[30, "module-platipy.imaging.projects.cardiac"]], "platipy.imaging.projects.cardiac.run": [[30, "module-platipy.imaging.projects.cardiac.run"]], "platipy.imaging.projects.cardiac.service": [[30, "module-platipy.imaging.projects.cardiac.service"]], "run_cardiac_segmentation() (in module platipy.imaging.projects.cardiac.run)": [[30, "platipy.imaging.projects.cardiac.run.run_cardiac_segmentation"]], "run_hybrid_segmentation() (in module platipy.imaging.projects.cardiac.run)": [[30, "platipy.imaging.projects.cardiac.run.run_hybrid_segmentation"]], "alignment_registration() (in module platipy.imaging.registration.linear)": [[31, "platipy.imaging.registration.linear.alignment_registration"], [37, "platipy.imaging.registration.linear.alignment_registration"]], "apply_deformable_transform() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.apply_deformable_transform"], [37, "platipy.imaging.registration.utils.apply_deformable_transform"]], "apply_linear_transform() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.apply_linear_transform"], [37, "platipy.imaging.registration.utils.apply_linear_transform"]], "apply_transform() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.apply_transform"], [37, "platipy.imaging.registration.utils.apply_transform"]], "bspline_registration() (in module platipy.imaging.registration.deformable)": [[31, "platipy.imaging.registration.deformable.bspline_registration"], [37, "platipy.imaging.registration.deformable.bspline_registration"]], "control_point_spacing_distance_to_number() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.control_point_spacing_distance_to_number"], [37, "platipy.imaging.registration.utils.control_point_spacing_distance_to_number"]], "convert_mask_to_distance_map() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.convert_mask_to_distance_map"], [37, "platipy.imaging.registration.utils.convert_mask_to_distance_map"]], "convert_mask_to_reg_structure() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.convert_mask_to_reg_structure"], [37, "platipy.imaging.registration.utils.convert_mask_to_reg_structure"]], "deformable_registration_command_iteration() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.deformable_registration_command_iteration"], [37, "platipy.imaging.registration.utils.deformable_registration_command_iteration"]], "fast_symmetric_forces_demons_registration() (in module platipy.imaging.registration.deformable)": [[31, "platipy.imaging.registration.deformable.fast_symmetric_forces_demons_registration"], [37, "platipy.imaging.registration.deformable.fast_symmetric_forces_demons_registration"]], "linear_registration() (in module platipy.imaging.registration.linear)": [[31, "platipy.imaging.registration.linear.linear_registration"], [37, "platipy.imaging.registration.linear.linear_registration"]], "multiscale_demons() (in module platipy.imaging.registration.deformable)": [[31, "platipy.imaging.registration.deformable.multiscale_demons"], [37, "platipy.imaging.registration.deformable.multiscale_demons"]], "platipy.imaging.registration": [[31, "module-platipy.imaging.registration"]], "platipy.imaging.registration.deformable": [[31, "module-platipy.imaging.registration.deformable"], [37, "module-platipy.imaging.registration.deformable"]], "platipy.imaging.registration.linear": [[31, "module-platipy.imaging.registration.linear"], [37, "module-platipy.imaging.registration.linear"]], "platipy.imaging.registration.utils": [[31, "module-platipy.imaging.registration.utils"], [37, "module-platipy.imaging.registration.utils"]], "registration_command_iteration() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.registration_command_iteration"], [37, "platipy.imaging.registration.utils.registration_command_iteration"]], "smooth_and_resample() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.smooth_and_resample"], [37, "platipy.imaging.registration.utils.smooth_and_resample"]], "stage_iteration() (in module platipy.imaging.registration.utils)": [[31, "platipy.imaging.registration.utils.stage_iteration"], [37, "platipy.imaging.registration.utils.stage_iteration"]], "assert_bronchus_mask() (in module platipy.imaging.tests.test_bronchus)": [[32, "platipy.imaging.tests.test_bronchus.assert_bronchus_mask"]], "assert_lung_mask() (in module platipy.imaging.tests.test_bronchus)": [[32, "platipy.imaging.tests.test_bronchus.assert_lung_mask"]], "bronchus_data() (in module platipy.imaging.tests.test_bronchus)": [[32, "platipy.imaging.tests.test_bronchus.bronchus_data"]], "cardiac_data() (in module platipy.imaging.tests.test_cardiac)": [[32, "platipy.imaging.tests.test_cardiac.cardiac_data"]], "get_hn_nifti() (in module platipy.imaging.tests.data)": [[32, "platipy.imaging.tests.data.get_hn_nifti"]], "get_lung_dicom() (in module platipy.imaging.tests.data)": [[32, "platipy.imaging.tests.data.get_lung_dicom"]], "get_lung_nifti() (in module platipy.imaging.tests.data)": [[32, "platipy.imaging.tests.data.get_lung_nifti"]], "nifti_data() (in module platipy.imaging.tests.test_visualiser)": [[32, "platipy.imaging.tests.test_visualiser.nifti_data"]], "platipy.imaging.tests": [[32, "module-platipy.imaging.tests"]], "platipy.imaging.tests.data": [[32, "module-platipy.imaging.tests.data"]], "platipy.imaging.tests.test_bronchus": [[32, "module-platipy.imaging.tests.test_bronchus"]], "platipy.imaging.tests.test_cardiac": [[32, "module-platipy.imaging.tests.test_cardiac"]], "platipy.imaging.tests.test_visualiser": [[32, "module-platipy.imaging.tests.test_visualiser"]], "test_bronchus_segmentation() (in module platipy.imaging.tests.test_bronchus)": [[32, "platipy.imaging.tests.test_bronchus.test_bronchus_segmentation"]], "test_cardiac_service() (in module platipy.imaging.tests.test_cardiac)": [[32, "platipy.imaging.tests.test_cardiac.test_cardiac_service"]], "test_cardiac_structure_guided_service() (in module platipy.imaging.tests.test_cardiac)": [[32, "platipy.imaging.tests.test_cardiac.test_cardiac_structure_guided_service"]], "test_comparison_overlay_visualisation() (in module platipy.imaging.tests.test_visualiser)": [[32, "platipy.imaging.tests.test_visualiser.test_comparison_overlay_visualisation"]], "test_contour_visualisation() (in module platipy.imaging.tests.test_visualiser)": [[32, "platipy.imaging.tests.test_visualiser.test_contour_visualisation"]], "test_lung_segmentation() (in module platipy.imaging.tests.test_bronchus)": [[32, "platipy.imaging.tests.test_bronchus.test_lung_segmentation"]], "test_scalar_overlay_visualisation() (in module platipy.imaging.tests.test_visualiser)": [[32, "platipy.imaging.tests.test_visualiser.test_scalar_overlay_visualisation"]], "com_from_image_list() (in module platipy.imaging.utils.vessel)": [[33, "platipy.imaging.utils.vessel.com_from_image_list"]], "convert_simpleitk_to_vtk() (in module platipy.imaging.utils.vessel)": [[33, "platipy.imaging.utils.vessel.convert_simpleitk_to_vtk"]], "crop_to_label_extent() (in module platipy.imaging.utils.crop)": [[33, "platipy.imaging.utils.crop.crop_to_label_extent"], [39, "platipy.imaging.utils.crop.crop_to_label_extent"]], "crop_to_roi() (in module platipy.imaging.utils.crop)": [[33, "platipy.imaging.utils.crop.crop_to_roi"], [39, "platipy.imaging.utils.crop.crop_to_roi"]], "detect_holes() (in module platipy.imaging.utils.lung)": [[33, "platipy.imaging.utils.lung.detect_holes"]], "fill_holes() (in module platipy.imaging.utils.lung)": [[33, "platipy.imaging.utils.lung.fill_holes"]], "generate_valve_from_great_vessel() (in module platipy.imaging.utils.valve)": [[33, "platipy.imaging.utils.valve.generate_valve_from_great_vessel"]], "generate_valve_using_cylinder() (in module platipy.imaging.utils.valve)": [[33, "platipy.imaging.utils.valve.generate_valve_using_cylinder"]], "get_external_mask() (in module platipy.imaging.utils.lung)": [[33, "platipy.imaging.utils.lung.get_external_mask"]], "get_lung_mask() (in module platipy.imaging.utils.lung)": [[33, "platipy.imaging.utils.lung.get_lung_mask"]], "label_to_roi() (in module platipy.imaging.utils.crop)": [[33, "platipy.imaging.utils.crop.label_to_roi"], [39, "platipy.imaging.utils.crop.label_to_roi"]], "platipy.imaging.utils": [[33, "module-platipy.imaging.utils"]], "platipy.imaging.utils.crop": [[33, "module-platipy.imaging.utils.crop"], [39, "module-platipy.imaging.utils.crop"]], "platipy.imaging.utils.lung": [[33, "module-platipy.imaging.utils.lung"]], "platipy.imaging.utils.valve": [[33, "module-platipy.imaging.utils.valve"]], "platipy.imaging.utils.vessel": [[33, "module-platipy.imaging.utils.vessel"]], "simpleitk_image_from_vtk_tube() (in module platipy.imaging.utils.vessel)": [[33, "platipy.imaging.utils.vessel.simpleitk_image_from_vtk_tube"]], "tube_from_com_list() (in module platipy.imaging.utils.vessel)": [[33, "platipy.imaging.utils.vessel.tube_from_com_list"]], "vessel_spline_generation() (in module platipy.imaging.utils.vessel)": [[33, "platipy.imaging.utils.vessel.vessel_spline_generation"]], "write_vtk_tube_to_file() (in module platipy.imaging.utils.vessel)": [[33, "platipy.imaging.utils.vessel.write_vtk_tube_to_file"]], "imagevisualiser (class in platipy.imaging.visualisation.visualiser)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser"]], "visualiseboundingbox (class in platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.VisualiseBoundingBox"]], "visualisecomparisonoverlay (class in platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.VisualiseComparisonOverlay"]], "visualisecontour (class in platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.VisualiseContour"]], "visualiseimage (class in platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.VisualiseImage"]], "visualisescalaroverlay (class in platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.VisualiseScalarOverlay"]], "visualisevectoroverlay (class in platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.VisualiseVectorOverlay"]], "add_bounding_box() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_bounding_box"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_bounding_box"]], "add_comparison_overlay() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_comparison_overlay"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_comparison_overlay"]], "add_contour() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_contour"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_contour"]], "add_scalar_overlay() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_scalar_overlay"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_scalar_overlay"]], "add_vector_overlay() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_vector_overlay"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.add_vector_overlay"]], "clear() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.clear"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.clear"]], "draw_bounding_box_on_axes() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.draw_bounding_box_on_axes"]], "generate_comparison_colormix() (in module platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.generate_comparison_colormix"]], "image (platipy.imaging.visualisation.visualiser.imagevisualiser property)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.image"]], "labelmap (platipy.imaging.visualisation.visualiser.imagevisualiser property)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.labelmap"]], "logger (in module platipy.imaging.visualisation.visualiser)": [[34, "platipy.imaging.visualisation.visualiser.logger"]], "platipy.imaging.visualisation": [[34, "module-platipy.imaging.visualisation"]], "platipy.imaging.visualisation.utils": [[34, "module-platipy.imaging.visualisation.utils"]], "platipy.imaging.visualisation.visualiser": [[34, "module-platipy.imaging.visualisation.visualiser"]], "project_onto_arbitrary_plane() (in module platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.project_onto_arbitrary_plane"]], "reorientate_vector_field() (in module platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.reorientate_vector_field"]], "return_slice() (in module platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.return_slice"]], "set_limits_from_label() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.set_limits_from_label"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.set_limits_from_label"]], "show() (platipy.imaging.visualisation.visualiser.imagevisualiser method)": [[34, "platipy.imaging.visualisation.visualiser.ImageVisualiser.show"], [40, "platipy.imaging.visualisation.visualiser.ImageVisualiser.show"]], "subsample_vector_field() (in module platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.subsample_vector_field"]], "vector_image_grid() (in module platipy.imaging.visualisation.utils)": [[34, "platipy.imaging.visualisation.utils.vector_image_grid"]], "platipy.imaging.utils.geometry": [[39, "module-platipy.imaging.utils.geometry"]], "platipy.imaging.utils.io": [[39, "module-platipy.imaging.utils.io"]], "rotate_image() (in module platipy.imaging.utils.geometry)": [[39, "platipy.imaging.utils.geometry.rotate_image"]], "vector_angle() (in module platipy.imaging.utils.geometry)": [[39, "platipy.imaging.utils.geometry.vector_angle"]], "write_nrrd_structure_set() (in module platipy.imaging.utils.io)": [[39, "platipy.imaging.utils.io.write_nrrd_structure_set"]]}})